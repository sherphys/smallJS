'use strict';var cov_2b297sxmiq=function(){var path="/home/shersnape/Ceiba/Java-Script/Tutorial/JavaScritp-Platzi/smallJS/smallJS-dbsql/tests/user-tests.js",hash="e1aaf00ad2ea580defe8779e3b5158510150502f",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/shersnape/Ceiba/Java-Script/Tutorial/JavaScritp-Platzi/smallJS/smallJS-dbsql/tests/user-tests.js",statementMap:{"0":{start:{line:3,column:30},end:{line:3,column:5630}},"1":{start:{line:4,column:27},end:{line:4,column:486}},"2":{start:{line:4,column:74},end:{line:4,column:93}},"3":{start:{line:4,column:96},end:{line:4,column:236}},"4":{start:{line:4,column:166},end:{line:4,column:219}},"5":{start:{line:4,column:220},end:{line:4,column:233}},"6":{start:{line:4,column:237},end:{line:4,column:454}},"7":{start:{line:4,column:328},end:{line:4,column:341}},"8":{start:{line:4,column:343},end:{line:4,column:362}},"9":{start:{line:4,column:363},end:{line:4,column:451}},"10":{start:{line:4,column:455},end:{line:4,column:482}},"11":{start:{line:6,column:13},end:{line:6,column:27}},"12":{start:{line:7,column:14},end:{line:7,column:30}},"13":{start:{line:8,column:19},end:{line:8,column:40}},"14":{start:{line:10,column:21},end:{line:10,column:47}},"15":{start:{line:12,column:13},end:{line:14,column:1}},"16":{start:{line:16,column:23},end:{line:18,column:1}},"17":{start:{line:20,column:22},end:{line:24,column:1}},"18":{start:{line:24,column:13},end:{line:24,column:25}},"19":{start:{line:25,column:15},end:{line:25,column:19}},"20":{start:{line:26,column:9},end:{line:26,column:13}},"21":{start:{line:27,column:14},end:{line:27,column:18}},"22":{start:{line:29,column:13},end:{line:29,column:51}},"23":{start:{line:39,column:15},end:{line:41,column:1}},"24":{start:{line:43,column:14},end:{line:51,column:1}},"25":{start:{line:53,column:0},end:{line:90,column:3}},"26":{start:{line:54,column:2},end:{line:54,column:34}},"27":{start:{line:56,column:2},end:{line:60,column:4}},"28":{start:{line:60,column:4},end:{line:60,column:37}},"29":{start:{line:61,column:2},end:{line:65,column:6}},"30":{start:{line:63,column:6},end:{line:63,column:21}},"31":{start:{line:68,column:2},end:{line:68,column:35}},"32":{start:{line:69,column:2},end:{line:69,column:78}},"33":{start:{line:83,column:24},end:{line:87,column:4}},"34":{start:{line:84,column:27},end:{line:84,column:35}},"35":{start:{line:85,column:35},end:{line:85,column:51}},"36":{start:{line:86,column:34},end:{line:86,column:49}},"37":{start:{line:89,column:2},end:{line:89,column:35}},"38":{start:{line:92,column:0},end:{line:94,column:3}},"39":{start:{line:93,column:2},end:{line:93,column:31}},"40":{start:{line:96,column:0},end:{line:107,column:3}},"41":{start:{line:97,column:13},end:{line:97,column:39}},"42":{start:{line:99,column:2},end:{line:106,column:35}},"43":{start:{line:109,column:0},end:{line:165,column:3}},"44":{start:{line:110,column:14},end:{line:110,column:40}},"45":{start:{line:111,column:14},end:{line:111,column:40}},"46":{start:{line:112,column:14},end:{line:112,column:40}},"47":{start:{line:113,column:14},end:{line:113,column:40}},"48":{start:{line:114,column:14},end:{line:114,column:40}},"49":{start:{line:115,column:14},end:{line:115,column:40}},"50":{start:{line:117,column:2},end:{line:124,column:40}},"51":{start:{line:125,column:2},end:{line:132,column:50}},"52":{start:{line:133,column:2},end:{line:140,column:49}},"53":{start:{line:141,column:2},end:{line:148,column:42}},"54":{start:{line:149,column:2},end:{line:156,column:48}},"55":{start:{line:157,column:2},end:{line:164,column:42}},"56":{start:{line:233,column:0},end:{line:301,column:3}},"57":{start:{line:234,column:14},end:{line:234,column:40}},"58":{start:{line:235,column:14},end:{line:235,column:40}},"59":{start:{line:236,column:15},end:{line:236,column:41}},"60":{start:{line:237,column:15},end:{line:237,column:41}},"61":{start:{line:238,column:15},end:{line:238,column:41}},"62":{start:{line:239,column:15},end:{line:239,column:41}},"63":{start:{line:241,column:13},end:{line:241,column:50}},"64":{start:{line:243,column:2},end:{line:251,column:43}},"65":{start:{line:252,column:2},end:{line:260,column:39}},"66":{start:{line:261,column:2},end:{line:271,column:49}},"67":{start:{line:272,column:2},end:{line:280,column:42}},"68":{start:{line:281,column:2},end:{line:289,column:38}},"69":{start:{line:290,column:2},end:{line:298,column:53}},"70":{start:{line:300,column:2},end:{line:300,column:57}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:27},end:{line:4,column:28}},loc:{start:{line:4,column:39},end:{line:4,column:484}},line:4},"1":{name:"PowerAssertRecorder",decl:{start:{line:4,column:50},end:{line:4,column:69}},loc:{start:{line:4,column:72},end:{line:4,column:95}},line:4},"2":{name:"_capt",decl:{start:{line:4,column:143},end:{line:4,column:148}},loc:{start:{line:4,column:164},end:{line:4,column:235}},line:4},"3":{name:"_expr",decl:{start:{line:4,column:284},end:{line:4,column:289}},loc:{start:{line:4,column:305},end:{line:4,column:453}},line:4},"4":{name:"(anonymous_4)",decl:{start:{line:53,column:16},end:{line:53,column:17}},loc:{start:{line:53,column:28},end:{line:90,column:1}},line:53},"5":{name:"(anonymous_5)",decl:{start:{line:84,column:21},end:{line:84,column:22}},loc:{start:{line:84,column:27},end:{line:84,column:35}},line:84},"6":{name:"(anonymous_6)",decl:{start:{line:85,column:29},end:{line:85,column:30}},loc:{start:{line:85,column:35},end:{line:85,column:51}},line:85},"7":{name:"(anonymous_7)",decl:{start:{line:86,column:28},end:{line:86,column:29}},loc:{start:{line:86,column:34},end:{line:86,column:49}},line:86},"8":{name:"(anonymous_8)",decl:{start:{line:92,column:15},end:{line:92,column:16}},loc:{start:{line:92,column:21},end:{line:94,column:1}},line:92},"9":{name:"(anonymous_9)",decl:{start:{line:96,column:13},end:{line:96,column:14}},loc:{start:{line:96,column:18},end:{line:107,column:1}},line:96},"10":{name:"(anonymous_10)",decl:{start:{line:109,column:21},end:{line:109,column:22}},loc:{start:{line:109,column:26},end:{line:165,column:1}},line:109},"11":{name:"(anonymous_11)",decl:{start:{line:233,column:42},end:{line:233,column:43}},loc:{start:{line:233,column:53},end:{line:301,column:1}},line:233}},branchMap:{"0":{loc:{start:{line:93,column:2},end:{line:93,column:30}},type:"binary-expr",locations:[{start:{line:93,column:2},end:{line:93,column:9}},{start:{line:93,column:13},end:{line:93,column:30}}],line:93}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var _powerAssertVisitorKeys=(cov_2b297sxmiq.s[0]++,'{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareOpaqueType":["id","typeParameters","supertype"],"DeclareVariable":["id"],"DeclareExportDeclaration":["declaration","specifiers","source"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"OpaqueType":["id","typeParameters","impltype","supertype"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"ObjectTypeSpreadProperty":["argument"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}'),_powerAssertRecorder=(cov_2b297sxmiq.s[1]++,function(){cov_2b297sxmiq.f[0]++;function PowerAssertRecorder(){cov_2b297sxmiq.f[1]++;cov_2b297sxmiq.s[2]++;this.captured=[];}cov_2b297sxmiq.s[3]++;PowerAssertRecorder.prototype._capt=function _capt(value,espath){cov_2b297sxmiq.f[2]++;cov_2b297sxmiq.s[4]++;this.captured.push({value:value,espath:espath});cov_2b297sxmiq.s[5]++;return value;};cov_2b297sxmiq.s[6]++;PowerAssertRecorder.prototype._expr=function _expr(value,source){cov_2b297sxmiq.f[3]++;var capturedValues=(cov_2b297sxmiq.s[7]++,this.captured);cov_2b297sxmiq.s[8]++;this.captured=[];cov_2b297sxmiq.s[9]++;return{powerAssertContext:{value:value,events:capturedValues},source:source};};cov_2b297sxmiq.s[10]++;return PowerAssertRecorder;}());const test=(cov_2b297sxmiq.s[11]++,require('ava'));const sinon=(cov_2b297sxmiq.s[12]++,require('sinon'));const proxyquire=(cov_2b297sxmiq.s[13]++,require('proxyquire'));const userFixtures=(cov_2b297sxmiq.s[14]++,require('./fixtures/user'));let config=(cov_2b297sxmiq.s[15]++,{logging(){}});let ScheduleUserStub=(cov_2b297sxmiq.s[16]++,{belongsTo:sinon.spy()});let ScheduleIPSStub=(cov_2b297sxmiq.s[17]++,{belongsTo:sinon.spy()// let id = 1
});let ccid=(cov_2b297sxmiq.s[18]++,'1082872742');let UserStub=(cov_2b297sxmiq.s[19]++,null);let db=(cov_2b297sxmiq.s[20]++,null);let sandbox=(cov_2b297sxmiq.s[21]++,null);let single=(cov_2b297sxmiq.s[22]++,Object.assign({},userFixtures.single));/* let connectedArgs = {
  where: { connected: true }
}

let usernameArgs = {
  where: { username: 'Shers', connected: true }
} */let ccidArgs=(cov_2b297sxmiq.s[23]++,{where:{ccid}});let newUser=(cov_2b297sxmiq.s[24]++,{ccid:'123-123-123',firstname:'test',username:'test',hostname:'test',pid:0,connected:false,operatorsAliases:false});cov_2b297sxmiq.s[25]++;test.beforeEach(async()=>{cov_2b297sxmiq.f[4]++;cov_2b297sxmiq.s[26]++;sandbox=sinon.createSandbox();cov_2b297sxmiq.s[27]++;UserStub={hasMany:sandbox.spy()// Model create Stub
};cov_2b297sxmiq.s[28]++;UserStub.create=sandbox.stub();cov_2b297sxmiq.s[29]++;UserStub.create.withArgs(newUser).returns(Promise.resolve({toJSON(){cov_2b297sxmiq.s[30]++;return newUser;}}));// Model update Stub
cov_2b297sxmiq.s[31]++;UserStub.update=sandbox.stub();cov_2b297sxmiq.s[32]++;UserStub.update.withArgs(single,ccidArgs).returns(Promise.resolve(single));/* // Model findById Stub
  UserStub.findById = sandbox.stub()
  UserStub.findById.withArgs(id).returns(Promise.resolve(agentFixtures.byId(id)))
   // Model findOne Stub
  UserStub.findOne = sandbox.stub()
  UserStub.findOne.withArgs(uuidArgs).returns(Promise.resolve(agentFixtures.byUuid(uuid)))
   // Model findAll Stub
  UserStub.findAll = sandbox.stub()
  UserStub.findAll.withArgs().returns(Promise.resolve(agentFixtures.all))
  UserStub.findAll.withArgs(connectedArgs).returns(Promise.resolve(agentFixtures.connected))
  UserStub.findAll.withArgs(usernameArgs).returns(Promise.resolve(agentFixtures.platzi))
  */const setupDatabase=(cov_2b297sxmiq.s[33]++,proxyquire('../',{'./models/user':()=>{cov_2b297sxmiq.f[5]++;cov_2b297sxmiq.s[34]++;return UserStub;},'./models/scheduleuser':()=>{cov_2b297sxmiq.f[6]++;cov_2b297sxmiq.s[35]++;return ScheduleUserStub;},'./models/scheduleips':()=>{cov_2b297sxmiq.f[7]++;cov_2b297sxmiq.s[36]++;return ScheduleIPSStub;}}));cov_2b297sxmiq.s[37]++;db=await setupDatabase(config);});cov_2b297sxmiq.s[38]++;test.afterEach(()=>{cov_2b297sxmiq.f[8]++;cov_2b297sxmiq.s[39]++;(cov_2b297sxmiq.b[0][0]++,sandbox)&&(cov_2b297sxmiq.b[0][1]++,sandbox.restore());});cov_2b297sxmiq.s[40]++;test('User',t=>{cov_2b297sxmiq.f[9]++;var _rec=(cov_2b297sxmiq.s[41]++,new _powerAssertRecorder());cov_2b297sxmiq.s[42]++;t.truthy(_rec._expr(_rec._capt(_rec._capt(db,'arguments/0/object').User,'arguments/0'),{content:'t.truthy(db.User, \'User service should exist\')',filepath:'tests/user-tests.js',line:96,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"truthy","range":[2,8]},"computed":false,"range":[0,8]},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"db","range":[9,11]},"property":{"type":"Identifier","name":"User","range":[12,16]},"computed":false,"range":[9,16]},{"type":"StringLiteral","value":"User service should exist","range":[18,45]}],"range":[0,46]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"truthy","range":[2,8]},{"type":{"label":"("},"range":[8,9]},{"type":{"label":"name"},"value":"db","range":[9,11]},{"type":{"label":"."},"range":[11,12]},{"type":{"label":"name"},"value":"User","range":[12,16]},{"type":{"label":","},"range":[16,17]},{"type":{"label":"string"},"value":"User service should exist","range":[18,45]},{"type":{"label":")"},"range":[45,46]}]',visitorKeys:_powerAssertVisitorKeys}),'User service should exist');});cov_2b297sxmiq.s[43]++;test.serial('Setup',t=>{cov_2b297sxmiq.f[10]++;var _rec2=(cov_2b297sxmiq.s[44]++,new _powerAssertRecorder()),_rec3=(cov_2b297sxmiq.s[45]++,new _powerAssertRecorder()),_rec4=(cov_2b297sxmiq.s[46]++,new _powerAssertRecorder()),_rec5=(cov_2b297sxmiq.s[47]++,new _powerAssertRecorder()),_rec6=(cov_2b297sxmiq.s[48]++,new _powerAssertRecorder()),_rec7=(cov_2b297sxmiq.s[49]++,new _powerAssertRecorder());cov_2b297sxmiq.s[50]++;t.true(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(UserStub,'arguments/0/object/object').hasMany,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.hasMany.called, \'UserModel.hasMany was executed\')',filepath:'tests/user-tests.js',line:100,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"hasMany","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"called","range":[24,30]},"computed":false,"range":[7,30]},{"type":"StringLiteral","value":"UserModel.hasMany was executed","range":[32,64]}],"range":[0,65]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"hasMany","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"called","range":[24,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"UserModel.hasMany was executed","range":[32,64]},{"type":{"label":")"},"range":[64,65]}]',visitorKeys:_powerAssertVisitorKeys}),'UserModel.hasMany was executed');cov_2b297sxmiq.s[51]++;t.true(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(UserStub,'arguments/0/callee/object/object').hasMany,'arguments/0/callee/object').calledWith(_rec3._capt(ScheduleUserStub,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(UserStub.hasMany.calledWith(ScheduleUserStub), \'Argument should be the ScheduleUserModel\')',filepath:'tests/user-tests.js',line:101,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"hasMany","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledWith","range":[24,34]},"computed":false,"range":[7,34]},"arguments":[{"type":"Identifier","name":"ScheduleUserStub","range":[35,51]}],"range":[7,52]},{"type":"StringLiteral","value":"Argument should be the ScheduleUserModel","range":[54,96]}],"range":[0,97]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"hasMany","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledWith","range":[24,34]},{"type":{"label":"("},"range":[34,35]},{"type":{"label":"name"},"value":"ScheduleUserStub","range":[35,51]},{"type":{"label":")"},"range":[51,52]},{"type":{"label":","},"range":[52,53]},{"type":{"label":"string"},"value":"Argument should be the ScheduleUserModel","range":[54,96]},{"type":{"label":")"},"range":[96,97]}]',visitorKeys:_powerAssertVisitorKeys}),'Argument should be the ScheduleUserModel');cov_2b297sxmiq.s[52]++;t.true(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(ScheduleUserStub,'arguments/0/object/object').belongsTo,'arguments/0/object').called,'arguments/0'),{content:'t.true(ScheduleUserStub.belongsTo.called, \'SheduleUserModel.belongsTo was executed\')',filepath:'tests/user-tests.js',line:102,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"ScheduleUserStub","range":[7,23]},"property":{"type":"Identifier","name":"belongsTo","range":[24,33]},"computed":false,"range":[7,33]},"property":{"type":"Identifier","name":"called","range":[34,40]},"computed":false,"range":[7,40]},{"type":"StringLiteral","value":"SheduleUserModel.belongsTo was executed","range":[42,83]}],"range":[0,84]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"ScheduleUserStub","range":[7,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"belongsTo","range":[24,33]},{"type":{"label":"."},"range":[33,34]},{"type":{"label":"name"},"value":"called","range":[34,40]},{"type":{"label":","},"range":[40,41]},{"type":{"label":"string"},"value":"SheduleUserModel.belongsTo was executed","range":[42,83]},{"type":{"label":")"},"range":[83,84]}]',visitorKeys:_powerAssertVisitorKeys}),'SheduleUserModel.belongsTo was executed');cov_2b297sxmiq.s[53]++;t.true(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(ScheduleUserStub,'arguments/0/callee/object/object').belongsTo,'arguments/0/callee/object').calledWith(_rec5._capt(UserStub,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(ScheduleUserStub.belongsTo.calledWith(UserStub), \'Argument should be the UserModel\')',filepath:'tests/user-tests.js',line:103,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"ScheduleUserStub","range":[7,23]},"property":{"type":"Identifier","name":"belongsTo","range":[24,33]},"computed":false,"range":[7,33]},"property":{"type":"Identifier","name":"calledWith","range":[34,44]},"computed":false,"range":[7,44]},"arguments":[{"type":"Identifier","name":"UserStub","range":[45,53]}],"range":[7,54]},{"type":"StringLiteral","value":"Argument should be the UserModel","range":[56,90]}],"range":[0,91]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"ScheduleUserStub","range":[7,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"belongsTo","range":[24,33]},{"type":{"label":"."},"range":[33,34]},{"type":{"label":"name"},"value":"calledWith","range":[34,44]},{"type":{"label":"("},"range":[44,45]},{"type":{"label":"name"},"value":"UserStub","range":[45,53]},{"type":{"label":")"},"range":[53,54]},{"type":{"label":","},"range":[54,55]},{"type":{"label":"string"},"value":"Argument should be the UserModel","range":[56,90]},{"type":{"label":")"},"range":[90,91]}]',visitorKeys:_powerAssertVisitorKeys}),'Argument should be the UserModel');cov_2b297sxmiq.s[54]++;t.true(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(ScheduleIPSStub,'arguments/0/object/object').belongsTo,'arguments/0/object').called,'arguments/0'),{content:'t.true(ScheduleIPSStub.belongsTo.called, \'SheduleIPSModel.belongsTo was executed\')',filepath:'tests/user-tests.js',line:104,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"ScheduleIPSStub","range":[7,22]},"property":{"type":"Identifier","name":"belongsTo","range":[23,32]},"computed":false,"range":[7,32]},"property":{"type":"Identifier","name":"called","range":[33,39]},"computed":false,"range":[7,39]},{"type":"StringLiteral","value":"SheduleIPSModel.belongsTo was executed","range":[41,81]}],"range":[0,82]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"ScheduleIPSStub","range":[7,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"belongsTo","range":[23,32]},{"type":{"label":"."},"range":[32,33]},{"type":{"label":"name"},"value":"called","range":[33,39]},{"type":{"label":","},"range":[39,40]},{"type":{"label":"string"},"value":"SheduleIPSModel.belongsTo was executed","range":[41,81]},{"type":{"label":")"},"range":[81,82]}]',visitorKeys:_powerAssertVisitorKeys}),'SheduleIPSModel.belongsTo was executed');cov_2b297sxmiq.s[55]++;t.true(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(ScheduleIPSStub,'arguments/0/callee/object/object').belongsTo,'arguments/0/callee/object').calledWith(_rec7._capt(UserStub,'arguments/0/arguments/0'),_rec7._capt({as:'IPS'},'arguments/0/arguments/1')),'arguments/0'),{content:'t.true(ScheduleIPSStub.belongsTo.calledWith(UserStub, { as: \'IPS\' }), \'Argument should be the UserModel\')',filepath:'tests/user-tests.js',line:105,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"ScheduleIPSStub","range":[7,22]},"property":{"type":"Identifier","name":"belongsTo","range":[23,32]},"computed":false,"range":[7,32]},"property":{"type":"Identifier","name":"calledWith","range":[33,43]},"computed":false,"range":[7,43]},"arguments":[{"type":"Identifier","name":"UserStub","range":[44,52]},{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"as","range":[56,58]},"value":{"type":"StringLiteral","value":"IPS","range":[60,65]},"computed":false,"shorthand":false,"range":[56,65]}],"range":[54,67]}],"range":[7,68]},{"type":"StringLiteral","value":"Argument should be the UserModel","range":[70,104]}],"range":[0,105]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"ScheduleIPSStub","range":[7,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"belongsTo","range":[23,32]},{"type":{"label":"."},"range":[32,33]},{"type":{"label":"name"},"value":"calledWith","range":[33,43]},{"type":{"label":"("},"range":[43,44]},{"type":{"label":"name"},"value":"UserStub","range":[44,52]},{"type":{"label":","},"range":[52,53]},{"type":{"label":"{"},"range":[54,55]},{"type":{"label":"name"},"value":"as","range":[56,58]},{"type":{"label":":"},"range":[58,59]},{"type":{"label":"string"},"value":"IPS","range":[60,65]},{"type":{"label":"}"},"range":[66,67]},{"type":{"label":")"},"range":[67,68]},{"type":{"label":","},"range":[68,69]},{"type":{"label":"string"},"value":"Argument should be the UserModel","range":[70,104]},{"type":{"label":")"},"range":[104,105]}]',visitorKeys:_powerAssertVisitorKeys}),'Argument should be the UserModel');});/*
test.serial('Agent#findById', async t => {
  let agent = await db.Agent.findById(id)

  t.true(UserStub.findById.called, 'findById should be called on model')
  t.true(UserStub.findById.calledOnce, 'findById should be called once')
  t.true(UserStub.findById.calledWith(id), 'findById should be called with specified id')

  t.deepEqual(agent, agentFixtures.byId(id), 'should be the same')
})

test.serial('Agent#findByUuid', async t => {
  let agent = await db.Agent.findByUuid(uuid)

  t.true(UserStub.findOne.called, 'findOne should be called on model')
  t.true(UserStub.findOne.calledOnce, 'findOne should be called once')
  t.true(UserStub.findOne.calledWith(uuidArgs), 'findOne should be called with uuid args')

  t.deepEqual(agent, agentFixtures.byUuid(uuid), 'agent should be the same')
})

test.serial('Agent#findAll', async t => {
  let agents = await db.Agent.findAll()

  t.true(UserStub.findAll.called, 'findAll should be called on model')
  t.true(UserStub.findAll.calledOnce, 'findAll should be called once')
  t.true(UserStub.findAll.calledWith(), 'findAll should be called without args')

  t.is(agents.length, agentFixtures.all.length, 'agents should be the same amount')
  t.deepEqual(agents, agentFixtures.all, 'agents should be the same')
})

test.serial('Agent#findConnected', async t => {
  let agents = await db.Agent.findConnected()

  t.true(UserStub.findAll.called, 'findAll should be called on model')
  t.true(UserStub.findAll.calledOnce, 'findAll should be called once')
  t.true(UserStub.findAll.calledWith(connectedArgs), 'findAll should be called with connected args')

  t.is(agents.length, agentFixtures.connected.length, 'agents should be the same amount')
  t.deepEqual(agents, agentFixtures.connected, 'agents should be the same')
})

test.serial('Agent#findByUsername', async t => {
  let agents = await db.Agent.findByUsername('platzi')

  t.true(UserStub.findAll.called, 'findAll should be called on model')
  t.true(UserStub.findAll.calledOnce, 'findAll should be called once')
  t.true(UserStub.findAll.calledWith(usernameArgs), 'findAll should be called with username args')

  t.is(agents.length, agentFixtures.platzi.length, 'agents should be the same amount')
  t.deepEqual(agents, agentFixtures.platzi, 'agents should be the same')
})

test.serial('Agent#createOrUpdate - exists', async t => {
  let agent = await db.Agent.createOrUpdate(single)

  t.true(UserStub.findOne.called, 'findOne should be called on model')
  t.true(UserStub.findOne.calledTwice, 'findOne should be called twice')
  t.true(UserStub.findOne.calledWith(uuidArgs), 'findOne should be called with uuid args')
  t.true(UserStub.update.called, 'agent.update called on model')
  t.true(UserStub.update.calledOnce, 'agent.update should be called once')
  t.true(UserStub.update.calledWith(single), 'agent.update should be called with specified args')

  t.deepEqual(agent, single, 'agent should be the same')
})+ */cov_2b297sxmiq.s[56]++;test.serial('Ugent#createOrUpdate - new',async t=>{cov_2b297sxmiq.f[11]++;var _rec8=(cov_2b297sxmiq.s[57]++,new _powerAssertRecorder()),_rec9=(cov_2b297sxmiq.s[58]++,new _powerAssertRecorder()),_rec10=(cov_2b297sxmiq.s[59]++,new _powerAssertRecorder()),_rec11=(cov_2b297sxmiq.s[60]++,new _powerAssertRecorder()),_rec12=(cov_2b297sxmiq.s[61]++,new _powerAssertRecorder()),_rec13=(cov_2b297sxmiq.s[62]++,new _powerAssertRecorder());let user=(cov_2b297sxmiq.s[63]++,await db.user.createOrUpdate(newUser));cov_2b297sxmiq.s[64]++;t.true(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(UserStub,'arguments/0/object/object').findOne,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.findOne.called, \'findOne should be called on model\')',filepath:'tests/user-tests.js',line:177,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"called","range":[24,30]},"computed":false,"range":[7,30]},{"type":"StringLiteral","value":"findOne should be called on model","range":[32,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"called","range":[24,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"findOne should be called on model","range":[32,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne should be called on model');cov_2b297sxmiq.s[65]++;t.true(_rec9._expr(_rec9._capt(_rec9._capt(_rec9._capt(UserStub,'arguments/0/object/object').findOne,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(UserStub.findOne.calledOnce, \'findOne should be called once\')',filepath:'tests/user-tests.js',line:178,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledOnce","range":[24,34]},"computed":false,"range":[7,34]},{"type":"StringLiteral","value":"findOne should be called once","range":[36,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledOnce","range":[24,34]},{"type":{"label":","},"range":[34,35]},{"type":{"label":"string"},"value":"findOne should be called once","range":[36,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne should be called once');cov_2b297sxmiq.s[66]++;t.true(_rec10._expr(_rec10._capt(_rec10._capt(_rec10._capt(UserStub,'arguments/0/callee/object/object').findOne,'arguments/0/callee/object').calledWith(_rec10._capt({where:_rec10._capt({uuid:_rec10._capt(_rec10._capt(newUser,'arguments/0/arguments/0/properties/0/value/properties/0/value/object').ccid,'arguments/0/arguments/0/properties/0/value/properties/0/value')},'arguments/0/arguments/0/properties/0/value')},'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(UserStub.findOne.calledWith({ where: { uuid: newUser.ccid } }), \'findOne should be called with uuid args\')',filepath:'tests/user-tests.js',line:179,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledWith","range":[24,34]},"computed":false,"range":[7,34]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"where","range":[37,42]},"value":{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"uuid","range":[46,50]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"newUser","range":[52,59]},"property":{"type":"Identifier","name":"ccid","range":[60,64]},"computed":false,"range":[52,64]},"computed":false,"shorthand":false,"range":[46,64]}],"range":[44,66]},"computed":false,"shorthand":false,"range":[37,66]}],"range":[35,68]}],"range":[7,69]},{"type":"StringLiteral","value":"findOne should be called with uuid args","range":[71,112]}],"range":[0,113]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledWith","range":[24,34]},{"type":{"label":"("},"range":[34,35]},{"type":{"label":"{"},"range":[35,36]},{"type":{"label":"name"},"value":"where","range":[37,42]},{"type":{"label":":"},"range":[42,43]},{"type":{"label":"{"},"range":[44,45]},{"type":{"label":"name"},"value":"uuid","range":[46,50]},{"type":{"label":":"},"range":[50,51]},{"type":{"label":"name"},"value":"newUser","range":[52,59]},{"type":{"label":"."},"range":[59,60]},{"type":{"label":"name"},"value":"ccid","range":[60,64]},{"type":{"label":"}"},"range":[65,66]},{"type":{"label":"}"},"range":[67,68]},{"type":{"label":")"},"range":[68,69]},{"type":{"label":","},"range":[69,70]},{"type":{"label":"string"},"value":"findOne should be called with uuid args","range":[71,112]},{"type":{"label":")"},"range":[112,113]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne should be called with uuid args');cov_2b297sxmiq.s[67]++;t.true(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(UserStub,'arguments/0/object/object').create,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.create.called, \'create should be called on model\')',filepath:'tests/user-tests.js',line:182,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"create","range":[16,22]},"computed":false,"range":[7,22]},"property":{"type":"Identifier","name":"called","range":[23,29]},"computed":false,"range":[7,29]},{"type":"StringLiteral","value":"create should be called on model","range":[31,65]}],"range":[0,66]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"create","range":[16,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"called","range":[23,29]},{"type":{"label":","},"range":[29,30]},{"type":{"label":"string"},"value":"create should be called on model","range":[31,65]},{"type":{"label":")"},"range":[65,66]}]',visitorKeys:_powerAssertVisitorKeys}),'create should be called on model');cov_2b297sxmiq.s[68]++;t.true(_rec12._expr(_rec12._capt(_rec12._capt(_rec12._capt(UserStub,'arguments/0/object/object').create,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(UserStub.create.calledOnce, \'create should be called once\')',filepath:'tests/user-tests.js',line:183,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"create","range":[16,22]},"computed":false,"range":[7,22]},"property":{"type":"Identifier","name":"calledOnce","range":[23,33]},"computed":false,"range":[7,33]},{"type":"StringLiteral","value":"create should be called once","range":[35,65]}],"range":[0,66]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"create","range":[16,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"calledOnce","range":[23,33]},{"type":{"label":","},"range":[33,34]},{"type":{"label":"string"},"value":"create should be called once","range":[35,65]},{"type":{"label":")"},"range":[65,66]}]',visitorKeys:_powerAssertVisitorKeys}),'create should be called once');cov_2b297sxmiq.s[69]++;t.true(_rec13._expr(_rec13._capt(_rec13._capt(_rec13._capt(UserStub,'arguments/0/callee/object/object').create,'arguments/0/callee/object').calledWith(_rec13._capt(newUser,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(UserStub.create.calledWith(newUser), \'create should be called with specified args\')',filepath:'tests/user-tests.js',line:184,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"create","range":[16,22]},"computed":false,"range":[7,22]},"property":{"type":"Identifier","name":"calledWith","range":[23,33]},"computed":false,"range":[7,33]},"arguments":[{"type":"Identifier","name":"newUser","range":[34,41]}],"range":[7,42]},{"type":"StringLiteral","value":"create should be called with specified args","range":[44,89]}],"range":[0,90]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"create","range":[16,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"calledWith","range":[23,33]},{"type":{"label":"("},"range":[33,34]},{"type":{"label":"name"},"value":"newUser","range":[34,41]},{"type":{"label":")"},"range":[41,42]},{"type":{"label":","},"range":[42,43]},{"type":{"label":"string"},"value":"create should be called with specified args","range":[44,89]},{"type":{"label":")"},"range":[89,90]}]',visitorKeys:_powerAssertVisitorKeys}),'create should be called with specified args');cov_2b297sxmiq.s[70]++;t.deepEqual(user,newUser,'agent should be the same');});//# sourceMappingURL=/home/shersnape/Ceiba/Java-Script/Tutorial/JavaScritp-Platzi/smallJS/smallJS-dbsql/node_modules/.cache/ava/0f57cf281dc0977d19ac48972dd5ad15.js.map