'use strict';var cov_2b297sxmiq=function(){var path="/home/shersnape/Ceiba/Java-Script/Tutorial/JavaScritp-Platzi/smallJS/smallJS-dbsql/tests/user-tests.js",hash="366d22b286d50e805e6c49e645e3db2ef80a8f10",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/shersnape/Ceiba/Java-Script/Tutorial/JavaScritp-Platzi/smallJS/smallJS-dbsql/tests/user-tests.js",statementMap:{"0":{start:{line:3,column:30},end:{line:3,column:5630}},"1":{start:{line:4,column:27},end:{line:4,column:486}},"2":{start:{line:4,column:74},end:{line:4,column:93}},"3":{start:{line:4,column:96},end:{line:4,column:236}},"4":{start:{line:4,column:166},end:{line:4,column:219}},"5":{start:{line:4,column:220},end:{line:4,column:233}},"6":{start:{line:4,column:237},end:{line:4,column:454}},"7":{start:{line:4,column:328},end:{line:4,column:341}},"8":{start:{line:4,column:343},end:{line:4,column:362}},"9":{start:{line:4,column:363},end:{line:4,column:451}},"10":{start:{line:4,column:455},end:{line:4,column:482}},"11":{start:{line:6,column:13},end:{line:6,column:27}},"12":{start:{line:7,column:14},end:{line:7,column:30}},"13":{start:{line:8,column:19},end:{line:8,column:40}},"14":{start:{line:10,column:21},end:{line:10,column:47}},"15":{start:{line:11,column:13},end:{line:13,column:1}},"16":{start:{line:15,column:22},end:{line:17,column:1}},"17":{start:{line:19,column:9},end:{line:19,column:10}},"18":{start:{line:20,column:11},end:{line:20,column:13}},"19":{start:{line:21,column:15},end:{line:21,column:19}},"20":{start:{line:22,column:9},end:{line:22,column:13}},"21":{start:{line:23,column:14},end:{line:23,column:18}},"22":{start:{line:25,column:13},end:{line:25,column:51}},"23":{start:{line:35,column:15},end:{line:35,column:23}},"24":{start:{line:36,column:12},end:{line:36,column:22}},"25":{start:{line:38,column:15},end:{line:40,column:1}},"26":{start:{line:42,column:15},end:{line:44,column:1}},"27":{start:{line:46,column:14},end:{line:59,column:1}},"28":{start:{line:60,column:0},end:{line:97,column:3}},"29":{start:{line:61,column:2},end:{line:61,column:34}},"30":{start:{line:63,column:2},end:{line:67,column:4}},"31":{start:{line:67,column:4},end:{line:67,column:37}},"32":{start:{line:68,column:2},end:{line:72,column:6}},"33":{start:{line:70,column:6},end:{line:70,column:21}},"34":{start:{line:75,column:2},end:{line:75,column:35}},"35":{start:{line:76,column:2},end:{line:76,column:78}},"36":{start:{line:79,column:2},end:{line:79,column:36}},"37":{start:{line:80,column:2},end:{line:80,column:90}},"38":{start:{line:82,column:2},end:{line:82,column:37}},"39":{start:{line:83,column:2},end:{line:83,column:81}},"40":{start:{line:86,column:2},end:{line:86,column:36}},"41":{start:{line:87,column:2},end:{line:87,column:73}},"42":{start:{line:88,column:2},end:{line:88,column:83}},"43":{start:{line:91,column:24},end:{line:94,column:4}},"44":{start:{line:92,column:27},end:{line:92,column:35}},"45":{start:{line:93,column:34},end:{line:93,column:49}},"46":{start:{line:96,column:2},end:{line:96,column:35}},"47":{start:{line:99,column:0},end:{line:101,column:3}},"48":{start:{line:100,column:2},end:{line:100,column:31}},"49":{start:{line:147,column:0},end:{line:292,column:3}},"50":{start:{line:148,column:13},end:{line:148,column:39}},"51":{start:{line:149,column:14},end:{line:149,column:40}},"52":{start:{line:150,column:14},end:{line:150,column:40}},"53":{start:{line:151,column:14},end:{line:151,column:40}},"54":{start:{line:152,column:14},end:{line:152,column:40}},"55":{start:{line:153,column:14},end:{line:153,column:40}},"56":{start:{line:154,column:14},end:{line:154,column:40}},"57":{start:{line:155,column:14},end:{line:155,column:40}},"58":{start:{line:156,column:14},end:{line:156,column:40}},"59":{start:{line:157,column:15},end:{line:157,column:41}},"60":{start:{line:158,column:15},end:{line:158,column:41}},"61":{start:{line:159,column:15},end:{line:159,column:41}},"62":{start:{line:160,column:15},end:{line:160,column:41}},"63":{start:{line:162,column:2},end:{line:170,column:40}},"64":{start:{line:171,column:2},end:{line:179,column:50}},"65":{start:{line:180,column:2},end:{line:188,column:49}},"66":{start:{line:189,column:2},end:{line:197,column:42}},"67":{start:{line:199,column:13},end:{line:199,column:50}},"68":{start:{line:201,column:2},end:{line:209,column:43}},"69":{start:{line:210,column:2},end:{line:218,column:39}},"70":{start:{line:221,column:2},end:{line:231,column:49}},"71":{start:{line:233,column:2},end:{line:241,column:42}},"72":{start:{line:242,column:2},end:{line:250,column:38}},"73":{start:{line:251,column:2},end:{line:259,column:53}},"74":{start:{line:261,column:14},end:{line:261,column:37}},"75":{start:{line:263,column:2},end:{line:271,column:43}},"76":{start:{line:272,column:2},end:{line:280,column:39}},"77":{start:{line:281,column:2},end:{line:289,column:47}},"78":{start:{line:294,column:0},end:{line:329,column:3}},"79":{start:{line:295,column:15},end:{line:295,column:41}},"80":{start:{line:296,column:15},end:{line:296,column:41}},"81":{start:{line:297,column:15},end:{line:297,column:41}},"82":{start:{line:299,column:13},end:{line:299,column:39}},"83":{start:{line:301,column:2},end:{line:309,column:44}},"84":{start:{line:310,column:2},end:{line:318,column:40}},"85":{start:{line:319,column:2},end:{line:327,column:53}},"86":{start:{line:328,column:2},end:{line:328,column:65}},"87":{start:{line:331,column:0},end:{line:366,column:3}},"88":{start:{line:332,column:15},end:{line:332,column:41}},"89":{start:{line:333,column:15},end:{line:333,column:41}},"90":{start:{line:334,column:15},end:{line:334,column:41}},"91":{start:{line:336,column:13},end:{line:336,column:43}},"92":{start:{line:338,column:2},end:{line:346,column:43}},"93":{start:{line:347,column:2},end:{line:355,column:39}},"94":{start:{line:356,column:2},end:{line:364,column:49}},"95":{start:{line:365,column:2},end:{line:365,column:74}},"96":{start:{line:368,column:0},end:{line:405,column:3}},"97":{start:{line:369,column:15},end:{line:369,column:41}},"98":{start:{line:370,column:15},end:{line:370,column:41}},"99":{start:{line:371,column:15},end:{line:371,column:41}},"100":{start:{line:373,column:14},end:{line:373,column:37}},"101":{start:{line:375,column:2},end:{line:383,column:43}},"102":{start:{line:384,column:2},end:{line:392,column:39}},"103":{start:{line:393,column:2},end:{line:401,column:47}},"104":{start:{line:403,column:2},end:{line:403,column:82}},"105":{start:{line:404,column:2},end:{line:404,column:68}},"106":{start:{line:407,column:0},end:{line:444,column:3}},"107":{start:{line:408,column:15},end:{line:408,column:41}},"108":{start:{line:409,column:15},end:{line:409,column:41}},"109":{start:{line:410,column:15},end:{line:410,column:41}},"110":{start:{line:412,column:14},end:{line:412,column:54}},"111":{start:{line:414,column:2},end:{line:422,column:43}},"112":{start:{line:423,column:2},end:{line:431,column:39}},"113":{start:{line:432,column:2},end:{line:440,column:47}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:27},end:{line:4,column:28}},loc:{start:{line:4,column:39},end:{line:4,column:484}},line:4},"1":{name:"PowerAssertRecorder",decl:{start:{line:4,column:50},end:{line:4,column:69}},loc:{start:{line:4,column:72},end:{line:4,column:95}},line:4},"2":{name:"_capt",decl:{start:{line:4,column:143},end:{line:4,column:148}},loc:{start:{line:4,column:164},end:{line:4,column:235}},line:4},"3":{name:"_expr",decl:{start:{line:4,column:284},end:{line:4,column:289}},loc:{start:{line:4,column:305},end:{line:4,column:453}},line:4},"4":{name:"(anonymous_4)",decl:{start:{line:60,column:16},end:{line:60,column:17}},loc:{start:{line:60,column:28},end:{line:97,column:1}},line:60},"5":{name:"(anonymous_5)",decl:{start:{line:92,column:21},end:{line:92,column:22}},loc:{start:{line:92,column:27},end:{line:92,column:35}},line:92},"6":{name:"(anonymous_6)",decl:{start:{line:93,column:28},end:{line:93,column:29}},loc:{start:{line:93,column:34},end:{line:93,column:49}},line:93},"7":{name:"(anonymous_7)",decl:{start:{line:99,column:15},end:{line:99,column:16}},loc:{start:{line:99,column:21},end:{line:101,column:1}},line:99},"8":{name:"(anonymous_8)",decl:{start:{line:147,column:30},end:{line:147,column:31}},loc:{start:{line:147,column:41},end:{line:292,column:1}},line:147},"9":{name:"(anonymous_9)",decl:{start:{line:294,column:29},end:{line:294,column:30}},loc:{start:{line:294,column:40},end:{line:329,column:1}},line:294},"10":{name:"(anonymous_10)",decl:{start:{line:331,column:31},end:{line:331,column:32}},loc:{start:{line:331,column:42},end:{line:366,column:1}},line:331},"11":{name:"(anonymous_11)",decl:{start:{line:368,column:28},end:{line:368,column:29}},loc:{start:{line:368,column:39},end:{line:405,column:1}},line:368},"12":{name:"(anonymous_12)",decl:{start:{line:407,column:30},end:{line:407,column:31}},loc:{start:{line:407,column:41},end:{line:444,column:1}},line:407}},branchMap:{"0":{loc:{start:{line:100,column:2},end:{line:100,column:30}},type:"binary-expr",locations:[{start:{line:100,column:2},end:{line:100,column:9}},{start:{line:100,column:13},end:{line:100,column:30}}],line:100}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},b:{"0":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var _powerAssertVisitorKeys=(cov_2b297sxmiq.s[0]++,'{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareOpaqueType":["id","typeParameters","supertype"],"DeclareVariable":["id"],"DeclareExportDeclaration":["declaration","specifiers","source"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"OpaqueType":["id","typeParameters","impltype","supertype"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"ObjectTypeSpreadProperty":["argument"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}'),_powerAssertRecorder=(cov_2b297sxmiq.s[1]++,function(){cov_2b297sxmiq.f[0]++;function PowerAssertRecorder(){cov_2b297sxmiq.f[1]++;cov_2b297sxmiq.s[2]++;this.captured=[];}cov_2b297sxmiq.s[3]++;PowerAssertRecorder.prototype._capt=function _capt(value,espath){cov_2b297sxmiq.f[2]++;cov_2b297sxmiq.s[4]++;this.captured.push({value:value,espath:espath});cov_2b297sxmiq.s[5]++;return value;};cov_2b297sxmiq.s[6]++;PowerAssertRecorder.prototype._expr=function _expr(value,source){cov_2b297sxmiq.f[3]++;var capturedValues=(cov_2b297sxmiq.s[7]++,this.captured);cov_2b297sxmiq.s[8]++;this.captured=[];cov_2b297sxmiq.s[9]++;return{powerAssertContext:{value:value,events:capturedValues},source:source};};cov_2b297sxmiq.s[10]++;return PowerAssertRecorder;}());const test=(cov_2b297sxmiq.s[11]++,require('ava'));const sinon=(cov_2b297sxmiq.s[12]++,require('sinon'));const proxyquire=(cov_2b297sxmiq.s[13]++,require('proxyquire'));const userFixtures=(cov_2b297sxmiq.s[14]++,require('./fixtures/user'));let config=(cov_2b297sxmiq.s[15]++,{logging(){}});let AppointmentStub=(cov_2b297sxmiq.s[16]++,{belongsTo:sinon.spy()});let id=(cov_2b297sxmiq.s[17]++,1);let ccid=(cov_2b297sxmiq.s[18]++,10);let UserStub=(cov_2b297sxmiq.s[19]++,null);let db=(cov_2b297sxmiq.s[20]++,null);let sandbox=(cov_2b297sxmiq.s[21]++,null);let single=(cov_2b297sxmiq.s[22]++,Object.assign({},userFixtures.single));/* let connectedArgs = {
  where: { connected: true }
}

let usernameArgs = {
  where: { username: 'Shers', connected: true }
} */let property=(cov_2b297sxmiq.s[23]++,'typedd');let value=(cov_2b297sxmiq.s[24]++,'customer');let typeArgs=(cov_2b297sxmiq.s[25]++,{where:{property:value}});let ccidArgs=(cov_2b297sxmiq.s[26]++,{where:{ccid}});let newUser=(cov_2b297sxmiq.s[27]++,{type:'admin',id:2,ccid:11,name:'Pepito Pérez',username:'Pepe',password:'ajayque2',hostname:'test-host',pid:1,connected:false,createdAt:new Date(),updatedAt:new Date(),operatorsAliases:false});cov_2b297sxmiq.s[28]++;test.beforeEach(async()=>{cov_2b297sxmiq.f[4]++;cov_2b297sxmiq.s[29]++;sandbox=sinon.createSandbox();cov_2b297sxmiq.s[30]++;UserStub={hasMany:sandbox.spy()// Model create Stub
};cov_2b297sxmiq.s[31]++;UserStub.create=sandbox.stub();cov_2b297sxmiq.s[32]++;UserStub.create.withArgs(newUser).returns(Promise.resolve({toJSON(){cov_2b297sxmiq.s[33]++;return newUser;}}));// Model update Stub
cov_2b297sxmiq.s[34]++;UserStub.update=sandbox.stub();cov_2b297sxmiq.s[35]++;UserStub.update.withArgs(single,ccidArgs).returns(Promise.resolve(single));// Model findOne Stub (with ccid and ips)
cov_2b297sxmiq.s[36]++;UserStub.findOne=sandbox.stub();cov_2b297sxmiq.s[37]++;UserStub.findOne.withArgs(ccidArgs).returns(Promise.resolve(userFixtures.byCCid(ccid)));// Model findById Stub
cov_2b297sxmiq.s[38]++;UserStub.findById=sandbox.stub();cov_2b297sxmiq.s[39]++;UserStub.findById.withArgs(id).returns(Promise.resolve(userFixtures.byId(id)));// Model findAll Stub
cov_2b297sxmiq.s[40]++;UserStub.findAll=sandbox.stub();cov_2b297sxmiq.s[41]++;UserStub.findAll.withArgs().returns(Promise.resolve(userFixtures.all));cov_2b297sxmiq.s[42]++;UserStub.findAll.withArgs(typeArgs).returns(Promise.resolve(userFixtures.types));// UserStub.findAll.withArgs(usernameArgs).returns(Promise.resolve(userFixtures.platzi))
const setupDatabase=(cov_2b297sxmiq.s[43]++,proxyquire('../',{'./models/user':()=>{cov_2b297sxmiq.f[5]++;cov_2b297sxmiq.s[44]++;return UserStub;},'./models/appointment':()=>{cov_2b297sxmiq.f[6]++;cov_2b297sxmiq.s[45]++;return AppointmentStub;}}));cov_2b297sxmiq.s[46]++;db=await setupDatabase(config);});cov_2b297sxmiq.s[47]++;test.afterEach(()=>{cov_2b297sxmiq.f[7]++;cov_2b297sxmiq.s[48]++;(cov_2b297sxmiq.b[0][0]++,sandbox)&&(cov_2b297sxmiq.b[0][1]++,sandbox.restore());});/*test('User', t => {
  t.truthy(db.User, 'User service should exist')
})*/ /*test.serial('Setup', t => {
  t.true(UserStub.hasMany.called, 'UserModel.hasMany was executed')
  t.true(UserStub.hasMany.calledWith(AppointmentStub), 'Argument should be the ScheduleUserModel')
  t.true(AppointmentStub.belongsTo.called, 'SheduleUserModel.belongsTo was executed')
  t.true(AppointmentStub.belongsTo.calledWith(UserStub), 'Argument should be the UserModel')
})*/ /*test.serial('User#createOrUpdate - new', async t => {
  let user = await db.User.createOrUpdate(newUser)

  t.true(UserStub.findOne.called, 'findOne should be called on model')
  t.true(UserStub.findOne.calledOnce, 'findOne should be called once')

  // Una para el ccid
  t.true(UserStub.findOne.calledWith({
  where: { ccid: newUser.ccid }
  }), 'findOne should be called with ccid args')

  t.true(UserStub.create.called, 'create should be called on model')
  t.true(UserStub.create.calledOnce, 'create should be called once')
  t.true(UserStub.create.calledWith(newUser), 'create should be called with specified args')

  t.deepEqual(user, newUser, 'agent should be the same')
})

test.serial('User#createOrUpdate - exists', async t => {
  let user = await db.User.createOrUpdate(single)

  t.true(UserStub.findOne.called, 'findOne should be called on model')
  t.true(UserStub.findOne.calledTwice, 'findOne should be called twice')
  // 2 Para el ccid
  t.true(UserStub.findOne.calledWith(ccidArgs), 'findOne should be called with ccid args')

  t.true(UserStub.update.called, 'agent.update called on model')
  t.true(UserStub.update.calledOnce, 'agent.update should be called once')
  t.true(UserStub.update.calledWith(single), 'agent.update should be called with specified args')

  t.deepEqual(user, single, 'agent should be the same')
})*/cov_2b297sxmiq.s[49]++;test.serial('SetupandCreate',async t=>{cov_2b297sxmiq.f[8]++;var _rec=(cov_2b297sxmiq.s[50]++,new _powerAssertRecorder()),_rec2=(cov_2b297sxmiq.s[51]++,new _powerAssertRecorder()),_rec3=(cov_2b297sxmiq.s[52]++,new _powerAssertRecorder()),_rec4=(cov_2b297sxmiq.s[53]++,new _powerAssertRecorder()),_rec5=(cov_2b297sxmiq.s[54]++,new _powerAssertRecorder()),_rec6=(cov_2b297sxmiq.s[55]++,new _powerAssertRecorder()),_rec7=(cov_2b297sxmiq.s[56]++,new _powerAssertRecorder()),_rec8=(cov_2b297sxmiq.s[57]++,new _powerAssertRecorder()),_rec9=(cov_2b297sxmiq.s[58]++,new _powerAssertRecorder()),_rec10=(cov_2b297sxmiq.s[59]++,new _powerAssertRecorder()),_rec11=(cov_2b297sxmiq.s[60]++,new _powerAssertRecorder()),_rec12=(cov_2b297sxmiq.s[61]++,new _powerAssertRecorder()),_rec13=(cov_2b297sxmiq.s[62]++,new _powerAssertRecorder());cov_2b297sxmiq.s[63]++;t.true(_rec._expr(_rec._capt(_rec._capt(_rec._capt(UserStub,'arguments/0/object/object').hasMany,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.hasMany.called, \'UserModel.hasMany was executed\')',filepath:'tests/user-tests.js',line:144,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"hasMany","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"called","range":[24,30]},"computed":false,"range":[7,30]},{"type":"StringLiteral","value":"UserModel.hasMany was executed","range":[32,64]}],"range":[0,65]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"hasMany","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"called","range":[24,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"UserModel.hasMany was executed","range":[32,64]},{"type":{"label":")"},"range":[64,65]}]',visitorKeys:_powerAssertVisitorKeys}),'UserModel.hasMany was executed');cov_2b297sxmiq.s[64]++;t.true(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(UserStub,'arguments/0/callee/object/object').hasMany,'arguments/0/callee/object').calledWith(_rec2._capt(AppointmentStub,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(UserStub.hasMany.calledWith(AppointmentStub), \'Argument should be the ScheduleUserModel\')',filepath:'tests/user-tests.js',line:145,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"hasMany","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledWith","range":[24,34]},"computed":false,"range":[7,34]},"arguments":[{"type":"Identifier","name":"AppointmentStub","range":[35,50]}],"range":[7,51]},{"type":"StringLiteral","value":"Argument should be the ScheduleUserModel","range":[53,95]}],"range":[0,96]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"hasMany","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledWith","range":[24,34]},{"type":{"label":"("},"range":[34,35]},{"type":{"label":"name"},"value":"AppointmentStub","range":[35,50]},{"type":{"label":")"},"range":[50,51]},{"type":{"label":","},"range":[51,52]},{"type":{"label":"string"},"value":"Argument should be the ScheduleUserModel","range":[53,95]},{"type":{"label":")"},"range":[95,96]}]',visitorKeys:_powerAssertVisitorKeys}),'Argument should be the ScheduleUserModel');cov_2b297sxmiq.s[65]++;t.true(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(AppointmentStub,'arguments/0/object/object').belongsTo,'arguments/0/object').called,'arguments/0'),{content:'t.true(AppointmentStub.belongsTo.called, \'SheduleUserModel.belongsTo was executed\')',filepath:'tests/user-tests.js',line:146,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AppointmentStub","range":[7,22]},"property":{"type":"Identifier","name":"belongsTo","range":[23,32]},"computed":false,"range":[7,32]},"property":{"type":"Identifier","name":"called","range":[33,39]},"computed":false,"range":[7,39]},{"type":"StringLiteral","value":"SheduleUserModel.belongsTo was executed","range":[41,82]}],"range":[0,83]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AppointmentStub","range":[7,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"belongsTo","range":[23,32]},{"type":{"label":"."},"range":[32,33]},{"type":{"label":"name"},"value":"called","range":[33,39]},{"type":{"label":","},"range":[39,40]},{"type":{"label":"string"},"value":"SheduleUserModel.belongsTo was executed","range":[41,82]},{"type":{"label":")"},"range":[82,83]}]',visitorKeys:_powerAssertVisitorKeys}),'SheduleUserModel.belongsTo was executed');cov_2b297sxmiq.s[66]++;t.true(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(AppointmentStub,'arguments/0/callee/object/object').belongsTo,'arguments/0/callee/object').calledWith(_rec4._capt(UserStub,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(AppointmentStub.belongsTo.calledWith(UserStub), \'Argument should be the UserModel\')',filepath:'tests/user-tests.js',line:147,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AppointmentStub","range":[7,22]},"property":{"type":"Identifier","name":"belongsTo","range":[23,32]},"computed":false,"range":[7,32]},"property":{"type":"Identifier","name":"calledWith","range":[33,43]},"computed":false,"range":[7,43]},"arguments":[{"type":"Identifier","name":"UserStub","range":[44,52]}],"range":[7,53]},{"type":"StringLiteral","value":"Argument should be the UserModel","range":[55,89]}],"range":[0,90]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AppointmentStub","range":[7,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"belongsTo","range":[23,32]},{"type":{"label":"."},"range":[32,33]},{"type":{"label":"name"},"value":"calledWith","range":[33,43]},{"type":{"label":"("},"range":[43,44]},{"type":{"label":"name"},"value":"UserStub","range":[44,52]},{"type":{"label":")"},"range":[52,53]},{"type":{"label":","},"range":[53,54]},{"type":{"label":"string"},"value":"Argument should be the UserModel","range":[55,89]},{"type":{"label":")"},"range":[89,90]}]',visitorKeys:_powerAssertVisitorKeys}),'Argument should be the UserModel');let user=(cov_2b297sxmiq.s[67]++,await db.User.createOrUpdate(newUser));cov_2b297sxmiq.s[68]++;t.true(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(UserStub,'arguments/0/object/object').findOne,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.findOne.called, \'findOne should be called on model\')',filepath:'tests/user-tests.js',line:151,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"called","range":[24,30]},"computed":false,"range":[7,30]},{"type":"StringLiteral","value":"findOne should be called on model","range":[32,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"called","range":[24,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"findOne should be called on model","range":[32,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne should be called on model');cov_2b297sxmiq.s[69]++;t.true(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(UserStub,'arguments/0/object/object').findOne,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(UserStub.findOne.calledOnce, \'findOne should be called once\')',filepath:'tests/user-tests.js',line:152,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledOnce","range":[24,34]},"computed":false,"range":[7,34]},{"type":"StringLiteral","value":"findOne should be called once","range":[36,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledOnce","range":[24,34]},{"type":{"label":","},"range":[34,35]},{"type":{"label":"string"},"value":"findOne should be called once","range":[36,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne should be called once');// Una para el ccid
cov_2b297sxmiq.s[70]++;t.true(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(UserStub,'arguments/0/callee/object/object').findOne,'arguments/0/callee/object').calledWith(_rec7._capt({where:_rec7._capt({ccid:_rec7._capt(_rec7._capt(newUser,'arguments/0/arguments/0/properties/0/value/properties/0/value/object').ccid,'arguments/0/arguments/0/properties/0/value/properties/0/value')},'arguments/0/arguments/0/properties/0/value')},'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(UserStub.findOne.calledWith({ where: { ccid: newUser.ccid } }), \'findOne should be called with ccid args\')',filepath:'tests/user-tests.js',line:155,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledWith","range":[24,34]},"computed":false,"range":[7,34]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"where","range":[37,42]},"value":{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"ccid","range":[46,50]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"newUser","range":[52,59]},"property":{"type":"Identifier","name":"ccid","range":[60,64]},"computed":false,"range":[52,64]},"computed":false,"shorthand":false,"range":[46,64]}],"range":[44,66]},"computed":false,"shorthand":false,"range":[37,66]}],"range":[35,68]}],"range":[7,69]},{"type":"StringLiteral","value":"findOne should be called with ccid args","range":[71,112]}],"range":[0,113]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledWith","range":[24,34]},{"type":{"label":"("},"range":[34,35]},{"type":{"label":"{"},"range":[35,36]},{"type":{"label":"name"},"value":"where","range":[37,42]},{"type":{"label":":"},"range":[42,43]},{"type":{"label":"{"},"range":[44,45]},{"type":{"label":"name"},"value":"ccid","range":[46,50]},{"type":{"label":":"},"range":[50,51]},{"type":{"label":"name"},"value":"newUser","range":[52,59]},{"type":{"label":"."},"range":[59,60]},{"type":{"label":"name"},"value":"ccid","range":[60,64]},{"type":{"label":"}"},"range":[65,66]},{"type":{"label":"}"},"range":[67,68]},{"type":{"label":")"},"range":[68,69]},{"type":{"label":","},"range":[69,70]},{"type":{"label":"string"},"value":"findOne should be called with ccid args","range":[71,112]},{"type":{"label":")"},"range":[112,113]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne should be called with ccid args');cov_2b297sxmiq.s[71]++;t.true(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(UserStub,'arguments/0/object/object').create,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.create.called, \'create should be called on model\')',filepath:'tests/user-tests.js',line:159,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"create","range":[16,22]},"computed":false,"range":[7,22]},"property":{"type":"Identifier","name":"called","range":[23,29]},"computed":false,"range":[7,29]},{"type":"StringLiteral","value":"create should be called on model","range":[31,65]}],"range":[0,66]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"create","range":[16,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"called","range":[23,29]},{"type":{"label":","},"range":[29,30]},{"type":{"label":"string"},"value":"create should be called on model","range":[31,65]},{"type":{"label":")"},"range":[65,66]}]',visitorKeys:_powerAssertVisitorKeys}),'create should be called on model');cov_2b297sxmiq.s[72]++;t.true(_rec9._expr(_rec9._capt(_rec9._capt(_rec9._capt(UserStub,'arguments/0/object/object').create,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(UserStub.create.calledOnce, \'create should be called once\')',filepath:'tests/user-tests.js',line:160,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"create","range":[16,22]},"computed":false,"range":[7,22]},"property":{"type":"Identifier","name":"calledOnce","range":[23,33]},"computed":false,"range":[7,33]},{"type":"StringLiteral","value":"create should be called once","range":[35,65]}],"range":[0,66]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"create","range":[16,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"calledOnce","range":[23,33]},{"type":{"label":","},"range":[33,34]},{"type":{"label":"string"},"value":"create should be called once","range":[35,65]},{"type":{"label":")"},"range":[65,66]}]',visitorKeys:_powerAssertVisitorKeys}),'create should be called once');cov_2b297sxmiq.s[73]++;t.true(_rec10._expr(_rec10._capt(_rec10._capt(_rec10._capt(UserStub,'arguments/0/callee/object/object').create,'arguments/0/callee/object').calledWith(_rec10._capt(newUser,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(UserStub.create.calledWith(newUser), \'create should be called with specified args\')',filepath:'tests/user-tests.js',line:161,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"create","range":[16,22]},"computed":false,"range":[7,22]},"property":{"type":"Identifier","name":"calledWith","range":[23,33]},"computed":false,"range":[7,33]},"arguments":[{"type":"Identifier","name":"newUser","range":[34,41]}],"range":[7,42]},{"type":"StringLiteral","value":"create should be called with specified args","range":[44,89]}],"range":[0,90]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"create","range":[16,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"calledWith","range":[23,33]},{"type":{"label":"("},"range":[33,34]},{"type":{"label":"name"},"value":"newUser","range":[34,41]},{"type":{"label":")"},"range":[41,42]},{"type":{"label":","},"range":[42,43]},{"type":{"label":"string"},"value":"create should be called with specified args","range":[44,89]},{"type":{"label":")"},"range":[89,90]}]',visitorKeys:_powerAssertVisitorKeys}),'create should be called with specified args');let users=(cov_2b297sxmiq.s[74]++,await db.User.findAll());cov_2b297sxmiq.s[75]++;t.true(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(UserStub,'arguments/0/object/object').findAll,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.findAll.called, \'findAll should be called on model\')',filepath:'tests/user-tests.js',line:165,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findAll","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"called","range":[24,30]},"computed":false,"range":[7,30]},{"type":"StringLiteral","value":"findAll should be called on model","range":[32,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findAll","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"called","range":[24,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"findAll should be called on model","range":[32,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called on model');cov_2b297sxmiq.s[76]++;t.true(_rec12._expr(_rec12._capt(_rec12._capt(_rec12._capt(UserStub,'arguments/0/object/object').findAll,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(UserStub.findAll.calledOnce, \'findAll should be called once\')',filepath:'tests/user-tests.js',line:166,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findAll","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledOnce","range":[24,34]},"computed":false,"range":[7,34]},{"type":"StringLiteral","value":"findAll should be called once","range":[36,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findAll","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledOnce","range":[24,34]},{"type":{"label":","},"range":[34,35]},{"type":{"label":"string"},"value":"findAll should be called once","range":[36,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called once');cov_2b297sxmiq.s[77]++;t.true(_rec13._expr(_rec13._capt(_rec13._capt(_rec13._capt(UserStub,'arguments/0/callee/object/object').findAll,'arguments/0/callee/object').calledWith(),'arguments/0'),{content:'t.true(UserStub.findAll.calledWith(), \'findAll should be called without args\')',filepath:'tests/user-tests.js',line:167,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findAll","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledWith","range":[24,34]},"computed":false,"range":[7,34]},"arguments":[],"range":[7,36]},{"type":"StringLiteral","value":"findAll should be called without args","range":[38,77]}],"range":[0,78]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findAll","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledWith","range":[24,34]},{"type":{"label":"("},"range":[34,35]},{"type":{"label":")"},"range":[35,36]},{"type":{"label":","},"range":[36,37]},{"type":{"label":"string"},"value":"findAll should be called without args","range":[38,77]},{"type":{"label":")"},"range":[77,78]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called without args');//t.is(user.length, userFixtures.all.length, 'agents should be the same amount')
});cov_2b297sxmiq.s[78]++;test.serial('User#findById',async t=>{cov_2b297sxmiq.f[9]++;var _rec14=(cov_2b297sxmiq.s[79]++,new _powerAssertRecorder()),_rec15=(cov_2b297sxmiq.s[80]++,new _powerAssertRecorder()),_rec16=(cov_2b297sxmiq.s[81]++,new _powerAssertRecorder());let user=(cov_2b297sxmiq.s[82]++,await db.User.findById(id));cov_2b297sxmiq.s[83]++;t.true(_rec14._expr(_rec14._capt(_rec14._capt(_rec14._capt(UserStub,'arguments/0/object/object').findById,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.findById.called, \'findById should be called on model\')',filepath:'tests/user-tests.js',line:176,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findById","range":[16,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"called","range":[25,31]},"computed":false,"range":[7,31]},{"type":"StringLiteral","value":"findById should be called on model","range":[33,69]}],"range":[0,70]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findById","range":[16,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"called","range":[25,31]},{"type":{"label":","},"range":[31,32]},{"type":{"label":"string"},"value":"findById should be called on model","range":[33,69]},{"type":{"label":")"},"range":[69,70]}]',visitorKeys:_powerAssertVisitorKeys}),'findById should be called on model');cov_2b297sxmiq.s[84]++;t.true(_rec15._expr(_rec15._capt(_rec15._capt(_rec15._capt(UserStub,'arguments/0/object/object').findById,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(UserStub.findById.calledOnce, \'findById should be called once\')',filepath:'tests/user-tests.js',line:177,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findById","range":[16,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledOnce","range":[25,35]},"computed":false,"range":[7,35]},{"type":"StringLiteral","value":"findById should be called once","range":[37,69]}],"range":[0,70]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findById","range":[16,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledOnce","range":[25,35]},{"type":{"label":","},"range":[35,36]},{"type":{"label":"string"},"value":"findById should be called once","range":[37,69]},{"type":{"label":")"},"range":[69,70]}]',visitorKeys:_powerAssertVisitorKeys}),'findById should be called once');cov_2b297sxmiq.s[85]++;t.true(_rec16._expr(_rec16._capt(_rec16._capt(_rec16._capt(UserStub,'arguments/0/callee/object/object').findById,'arguments/0/callee/object').calledWith(_rec16._capt(id,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(UserStub.findById.calledWith(id), \'findById should be called with specified id\')',filepath:'tests/user-tests.js',line:178,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findById","range":[16,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledWith","range":[25,35]},"computed":false,"range":[7,35]},"arguments":[{"type":"Identifier","name":"id","range":[36,38]}],"range":[7,39]},{"type":"StringLiteral","value":"findById should be called with specified id","range":[41,86]}],"range":[0,87]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findById","range":[16,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledWith","range":[25,35]},{"type":{"label":"("},"range":[35,36]},{"type":{"label":"name"},"value":"id","range":[36,38]},{"type":{"label":")"},"range":[38,39]},{"type":{"label":","},"range":[39,40]},{"type":{"label":"string"},"value":"findById should be called with specified id","range":[41,86]},{"type":{"label":")"},"range":[86,87]}]',visitorKeys:_powerAssertVisitorKeys}),'findById should be called with specified id');cov_2b297sxmiq.s[86]++;t.deepEqual(user,userFixtures.byId(id),'should be the same');});cov_2b297sxmiq.s[87]++;test.serial('User#findByCCid',async t=>{cov_2b297sxmiq.f[10]++;var _rec17=(cov_2b297sxmiq.s[88]++,new _powerAssertRecorder()),_rec18=(cov_2b297sxmiq.s[89]++,new _powerAssertRecorder()),_rec19=(cov_2b297sxmiq.s[90]++,new _powerAssertRecorder());let user=(cov_2b297sxmiq.s[91]++,await db.User.findByCCid(ccid));cov_2b297sxmiq.s[92]++;t.true(_rec17._expr(_rec17._capt(_rec17._capt(_rec17._capt(UserStub,'arguments/0/object/object').findOne,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.findOne.called, \'findOne should be called on model\')',filepath:'tests/user-tests.js',line:185,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"called","range":[24,30]},"computed":false,"range":[7,30]},{"type":"StringLiteral","value":"findOne should be called on model","range":[32,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"called","range":[24,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"findOne should be called on model","range":[32,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne should be called on model');cov_2b297sxmiq.s[93]++;t.true(_rec18._expr(_rec18._capt(_rec18._capt(_rec18._capt(UserStub,'arguments/0/object/object').findOne,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(UserStub.findOne.calledOnce, \'findOne should be called once\')',filepath:'tests/user-tests.js',line:186,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledOnce","range":[24,34]},"computed":false,"range":[7,34]},{"type":"StringLiteral","value":"findOne should be called once","range":[36,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledOnce","range":[24,34]},{"type":{"label":","},"range":[34,35]},{"type":{"label":"string"},"value":"findOne should be called once","range":[36,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne should be called once');cov_2b297sxmiq.s[94]++;t.true(_rec19._expr(_rec19._capt(_rec19._capt(_rec19._capt(UserStub,'arguments/0/callee/object/object').findOne,'arguments/0/callee/object').calledWith(_rec19._capt(ccidArgs,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(UserStub.findOne.calledWith(ccidArgs), \'findOne should be called with ccid args\')',filepath:'tests/user-tests.js',line:187,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledWith","range":[24,34]},"computed":false,"range":[7,34]},"arguments":[{"type":"Identifier","name":"ccidArgs","range":[35,43]}],"range":[7,44]},{"type":"StringLiteral","value":"findOne should be called with ccid args","range":[46,87]}],"range":[0,88]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledWith","range":[24,34]},{"type":{"label":"("},"range":[34,35]},{"type":{"label":"name"},"value":"ccidArgs","range":[35,43]},{"type":{"label":")"},"range":[43,44]},{"type":{"label":","},"range":[44,45]},{"type":{"label":"string"},"value":"findOne should be called with ccid args","range":[46,87]},{"type":{"label":")"},"range":[87,88]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne should be called with ccid args');cov_2b297sxmiq.s[95]++;t.deepEqual(user,userFixtures.byCCid(ccid),'user should be the same');});cov_2b297sxmiq.s[96]++;test.serial('User#findAll',async t=>{cov_2b297sxmiq.f[11]++;var _rec20=(cov_2b297sxmiq.s[97]++,new _powerAssertRecorder()),_rec21=(cov_2b297sxmiq.s[98]++,new _powerAssertRecorder()),_rec22=(cov_2b297sxmiq.s[99]++,new _powerAssertRecorder());let users=(cov_2b297sxmiq.s[100]++,await db.User.findAll());cov_2b297sxmiq.s[101]++;t.true(_rec20._expr(_rec20._capt(_rec20._capt(_rec20._capt(UserStub,'arguments/0/object/object').findAll,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.findAll.called, \'findAll should be called on model\')',filepath:'tests/user-tests.js',line:196,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findAll","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"called","range":[24,30]},"computed":false,"range":[7,30]},{"type":"StringLiteral","value":"findAll should be called on model","range":[32,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findAll","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"called","range":[24,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"findAll should be called on model","range":[32,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called on model');cov_2b297sxmiq.s[102]++;t.true(_rec21._expr(_rec21._capt(_rec21._capt(_rec21._capt(UserStub,'arguments/0/object/object').findAll,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(UserStub.findAll.calledOnce, \'findAll should be called once\')',filepath:'tests/user-tests.js',line:197,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findAll","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledOnce","range":[24,34]},"computed":false,"range":[7,34]},{"type":"StringLiteral","value":"findAll should be called once","range":[36,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findAll","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledOnce","range":[24,34]},{"type":{"label":","},"range":[34,35]},{"type":{"label":"string"},"value":"findAll should be called once","range":[36,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called once');cov_2b297sxmiq.s[103]++;t.true(_rec22._expr(_rec22._capt(_rec22._capt(_rec22._capt(UserStub,'arguments/0/callee/object/object').findAll,'arguments/0/callee/object').calledWith(),'arguments/0'),{content:'t.true(UserStub.findAll.calledWith(), \'findAll should be called without args\')',filepath:'tests/user-tests.js',line:198,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findAll","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledWith","range":[24,34]},"computed":false,"range":[7,34]},"arguments":[],"range":[7,36]},{"type":"StringLiteral","value":"findAll should be called without args","range":[38,77]}],"range":[0,78]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findAll","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledWith","range":[24,34]},{"type":{"label":"("},"range":[34,35]},{"type":{"label":")"},"range":[35,36]},{"type":{"label":","},"range":[36,37]},{"type":{"label":"string"},"value":"findAll should be called without args","range":[38,77]},{"type":{"label":")"},"range":[77,78]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called without args');cov_2b297sxmiq.s[104]++;t.is(users.length,userFixtures.all.length,'agents should be the same amount');cov_2b297sxmiq.s[105]++;t.deepEqual(users,userFixtures.all,'agents should be the same');});cov_2b297sxmiq.s[106]++;test.serial('User#findGroup',async t=>{cov_2b297sxmiq.f[12]++;var _rec23=(cov_2b297sxmiq.s[107]++,new _powerAssertRecorder()),_rec24=(cov_2b297sxmiq.s[108]++,new _powerAssertRecorder()),_rec25=(cov_2b297sxmiq.s[109]++,new _powerAssertRecorder());let users=(cov_2b297sxmiq.s[110]++,await db.User.findGroup(property,value));cov_2b297sxmiq.s[111]++;t.true(_rec23._expr(_rec23._capt(_rec23._capt(_rec23._capt(UserStub,'arguments/0/object/object').findAll,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.findAll.called, \'findAll should be called on model\')',filepath:'tests/user-tests.js',line:207,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findAll","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"called","range":[24,30]},"computed":false,"range":[7,30]},{"type":"StringLiteral","value":"findAll should be called on model","range":[32,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findAll","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"called","range":[24,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"findAll should be called on model","range":[32,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called on model');cov_2b297sxmiq.s[112]++;t.true(_rec24._expr(_rec24._capt(_rec24._capt(_rec24._capt(UserStub,'arguments/0/object/object').findAll,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(UserStub.findAll.calledOnce, \'findAll should be called once\')',filepath:'tests/user-tests.js',line:208,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findAll","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledOnce","range":[24,34]},"computed":false,"range":[7,34]},{"type":"StringLiteral","value":"findAll should be called once","range":[36,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findAll","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledOnce","range":[24,34]},{"type":{"label":","},"range":[34,35]},{"type":{"label":"string"},"value":"findAll should be called once","range":[36,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called once');cov_2b297sxmiq.s[113]++;t.true(_rec25._expr(_rec25._capt(_rec25._capt(_rec25._capt(UserStub,'arguments/0/callee/object/object').findAll,'arguments/0/callee/object').calledWith(_rec25._capt(typeArgs,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(UserStub.findAll.calledWith(typeArgs), \'findAll should be called without args\')',filepath:'tests/user-tests.js',line:209,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findAll","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledWith","range":[24,34]},"computed":false,"range":[7,34]},"arguments":[{"type":"Identifier","name":"typeArgs","range":[35,43]}],"range":[7,44]},{"type":"StringLiteral","value":"findAll should be called without args","range":[46,85]}],"range":[0,86]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findAll","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledWith","range":[24,34]},{"type":{"label":"("},"range":[34,35]},{"type":{"label":"name"},"value":"typeArgs","range":[35,43]},{"type":{"label":")"},"range":[43,44]},{"type":{"label":","},"range":[44,45]},{"type":{"label":"string"},"value":"findAll should be called without args","range":[46,85]},{"type":{"label":")"},"range":[85,86]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called without args');//t.is(users.length, userFixtures.types.length, 'agents should be the same amount')
//t.deepEqual(users, userFixtures.types, 'users should be the same')
});/* test.serial('Agent#findConnected', async t => {
  let agents = await db.Agent.findConnected()

  t.true(UserStub.findAll.called, 'findAll should be called on model')
  t.true(UserStub.findAll.calledOnce, 'findAll should be called once')
  t.true(UserStub.findAll.calledWith(connectedArgs), 'findAll should be called with connected args')

  t.is(agents.length, agentFixtures.connected.length, 'agents should be the same amount')
  t.deepEqual(agents, agentFixtures.connected, 'agents should be the same')
}) */ /* test.serial('Agent#findByUsername', async t => {
  let agents = await db.Agent.findByUsername('platzi')

  t.true(UserStub.findAll.called, 'findAll should be called on model')
  t.true(UserStub.findAll.calledOnce, 'findAll should be called once')
  t.true(UserStub.findAll.calledWith(usernameArgs), 'findAll should be called with username args')

  t.is(agents.length, agentFixtures.platzi.length, 'agents should be the same amount')
  t.deepEqual(agents, agentFixtures.platzi, 'agents should be the same')
}) */ //# sourceMappingURL=/home/shersnape/Ceiba/Java-Script/Tutorial/JavaScritp-Platzi/smallJS/smallJS-dbsql/node_modules/.cache/ava/9208b8d376407d51ff67168417bd9096.js.map