'use strict';var cov_97srrczfm=function(){var path="/home/shersnape/Ceiba/Java-Script/Tutorial/JavaScritp-Platzi/smallJS/smallJS-dbsql/tests/appointment-tests.js",hash="d4e5d8511219fe2db93459da2ccf883b47400431",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/shersnape/Ceiba/Java-Script/Tutorial/JavaScritp-Platzi/smallJS/smallJS-dbsql/tests/appointment-tests.js",statementMap:{"0":{start:{line:3,column:30},end:{line:3,column:5630}},"1":{start:{line:4,column:27},end:{line:4,column:486}},"2":{start:{line:4,column:74},end:{line:4,column:93}},"3":{start:{line:4,column:96},end:{line:4,column:236}},"4":{start:{line:4,column:166},end:{line:4,column:219}},"5":{start:{line:4,column:220},end:{line:4,column:233}},"6":{start:{line:4,column:237},end:{line:4,column:454}},"7":{start:{line:4,column:328},end:{line:4,column:341}},"8":{start:{line:4,column:343},end:{line:4,column:362}},"9":{start:{line:4,column:363},end:{line:4,column:451}},"10":{start:{line:4,column:455},end:{line:4,column:482}},"11":{start:{line:6,column:13},end:{line:6,column:27}},"12":{start:{line:7,column:14},end:{line:7,column:30}},"13":{start:{line:8,column:19},end:{line:8,column:40}},"14":{start:{line:9,column:18},end:{line:9,column:38}},"15":{start:{line:10,column:11},end:{line:10,column:23}},"16":{start:{line:12,column:21},end:{line:12,column:47}},"17":{start:{line:13,column:28},end:{line:13,column:61}},"18":{start:{line:15,column:13},end:{line:17,column:1}},"19":{start:{line:19,column:13},end:{line:19,column:14}},"20":{start:{line:20,column:20},end:{line:20,column:21}},"21":{start:{line:21,column:11},end:{line:21,column:13}},"22":{start:{line:22,column:15},end:{line:22,column:19}},"23":{start:{line:23,column:22},end:{line:23,column:26}},"24":{start:{line:24,column:9},end:{line:24,column:13}},"25":{start:{line:25,column:14},end:{line:25,column:18}},"26":{start:{line:27,column:15},end:{line:27,column:58}},"27":{start:{line:28,column:13},end:{line:28,column:59}},"28":{start:{line:29,column:13},end:{line:29,column:58}},"29":{start:{line:31,column:12},end:{line:36,column:1}},"30":{start:{line:37,column:15},end:{line:39,column:1}},"31":{start:{line:41,column:21},end:{line:56,column:1}},"32":{start:{line:57,column:14},end:{line:57,column:26}},"33":{start:{line:58,column:13},end:{line:58,column:25}},"34":{start:{line:63,column:15},end:{line:71,column:1}},"35":{start:{line:72,column:0},end:{line:111,column:3}},"36":{start:{line:73,column:2},end:{line:73,column:34}},"37":{start:{line:75,column:2},end:{line:77,column:4}},"38":{start:{line:79,column:2},end:{line:83,column:4}},"39":{start:{line:83,column:4},end:{line:83,column:44}},"40":{start:{line:84,column:2},end:{line:88,column:6}},"41":{start:{line:86,column:6},end:{line:86,column:28}},"42":{start:{line:91,column:2},end:{line:91,column:43}},"43":{start:{line:92,column:2},end:{line:92,column:117}},"44":{start:{line:95,column:2},end:{line:95,column:36}},"45":{start:{line:96,column:2},end:{line:96,column:90}},"46":{start:{line:98,column:2},end:{line:98,column:43}},"47":{start:{line:99,column:2},end:{line:99,column:115}},"48":{start:{line:105,column:24},end:{line:108,column:4}},"49":{start:{line:106,column:27},end:{line:106,column:35}},"50":{start:{line:107,column:34},end:{line:107,column:49}},"51":{start:{line:110,column:2},end:{line:110,column:35}},"52":{start:{line:113,column:0},end:{line:115,column:3}},"53":{start:{line:114,column:2},end:{line:114,column:31}},"54":{start:{line:117,column:0},end:{line:128,column:3}},"55":{start:{line:118,column:13},end:{line:118,column:39}},"56":{start:{line:120,column:2},end:{line:127,column:42}},"57":{start:{line:130,column:0},end:{line:141,column:3}},"58":{start:{line:131,column:14},end:{line:131,column:40}},"59":{start:{line:133,column:2},end:{line:140,column:35}},"60":{start:{line:143,column:0},end:{line:181,column:3}},"61":{start:{line:144,column:14},end:{line:144,column:40}},"62":{start:{line:145,column:14},end:{line:145,column:40}},"63":{start:{line:146,column:14},end:{line:146,column:40}},"64":{start:{line:147,column:14},end:{line:147,column:40}},"65":{start:{line:149,column:2},end:{line:156,column:40}},"66":{start:{line:157,column:2},end:{line:164,column:49}},"67":{start:{line:165,column:2},end:{line:172,column:49}},"68":{start:{line:173,column:2},end:{line:180,column:42}},"69":{start:{line:183,column:0},end:{line:295,column:3}},"70":{start:{line:184,column:14},end:{line:184,column:40}},"71":{start:{line:185,column:14},end:{line:185,column:40}},"72":{start:{line:186,column:14},end:{line:186,column:40}},"73":{start:{line:187,column:15},end:{line:187,column:41}},"74":{start:{line:188,column:15},end:{line:188,column:41}},"75":{start:{line:189,column:15},end:{line:189,column:41}},"76":{start:{line:190,column:15},end:{line:190,column:41}},"77":{start:{line:191,column:15},end:{line:191,column:41}},"78":{start:{line:192,column:15},end:{line:192,column:41}},"79":{start:{line:193,column:15},end:{line:193,column:41}},"80":{start:{line:195,column:20},end:{line:195,column:77}},"81":{start:{line:198,column:2},end:{line:206,column:50}},"82":{start:{line:207,column:2},end:{line:215,column:47}},"83":{start:{line:216,column:2},end:{line:224,column:56}},"84":{start:{line:227,column:2},end:{line:235,column:53}},"85":{start:{line:236,column:2},end:{line:244,column:50}},"86":{start:{line:245,column:2},end:{line:253,column:55}},"87":{start:{line:256,column:2},end:{line:264,column:6}},"88":{start:{line:267,column:2},end:{line:275,column:44}},"89":{start:{line:276,column:2},end:{line:284,column:50}},"90":{start:{line:285,column:2},end:{line:293,column:65}},"91":{start:{line:294,column:2},end:{line:294,column:77}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:27},end:{line:4,column:28}},loc:{start:{line:4,column:39},end:{line:4,column:484}},line:4},"1":{name:"PowerAssertRecorder",decl:{start:{line:4,column:50},end:{line:4,column:69}},loc:{start:{line:4,column:72},end:{line:4,column:95}},line:4},"2":{name:"_capt",decl:{start:{line:4,column:143},end:{line:4,column:148}},loc:{start:{line:4,column:164},end:{line:4,column:235}},line:4},"3":{name:"_expr",decl:{start:{line:4,column:284},end:{line:4,column:289}},loc:{start:{line:4,column:305},end:{line:4,column:453}},line:4},"4":{name:"(anonymous_4)",decl:{start:{line:72,column:16},end:{line:72,column:17}},loc:{start:{line:72,column:28},end:{line:111,column:1}},line:72},"5":{name:"(anonymous_5)",decl:{start:{line:106,column:21},end:{line:106,column:22}},loc:{start:{line:106,column:27},end:{line:106,column:35}},line:106},"6":{name:"(anonymous_6)",decl:{start:{line:107,column:28},end:{line:107,column:29}},loc:{start:{line:107,column:34},end:{line:107,column:49}},line:107},"7":{name:"(anonymous_7)",decl:{start:{line:113,column:15},end:{line:113,column:16}},loc:{start:{line:113,column:21},end:{line:115,column:1}},line:113},"8":{name:"(anonymous_8)",decl:{start:{line:117,column:20},end:{line:117,column:21}},loc:{start:{line:117,column:25},end:{line:128,column:1}},line:117},"9":{name:"(anonymous_9)",decl:{start:{line:130,column:13},end:{line:130,column:14}},loc:{start:{line:130,column:18},end:{line:141,column:1}},line:130},"10":{name:"(anonymous_10)",decl:{start:{line:143,column:21},end:{line:143,column:22}},loc:{start:{line:143,column:26},end:{line:181,column:1}},line:143},"11":{name:"(anonymous_11)",decl:{start:{line:183,column:63},end:{line:183,column:64}},loc:{start:{line:183,column:74},end:{line:295,column:1}},line:183}},branchMap:{"0":{loc:{start:{line:114,column:2},end:{line:114,column:30}},type:"binary-expr",locations:[{start:{line:114,column:2},end:{line:114,column:9}},{start:{line:114,column:13},end:{line:114,column:30}}],line:114}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var _powerAssertVisitorKeys=(cov_97srrczfm.s[0]++,'{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareOpaqueType":["id","typeParameters","supertype"],"DeclareVariable":["id"],"DeclareExportDeclaration":["declaration","specifiers","source"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"OpaqueType":["id","typeParameters","impltype","supertype"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"ObjectTypeSpreadProperty":["argument"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}'),_powerAssertRecorder=(cov_97srrczfm.s[1]++,function(){cov_97srrczfm.f[0]++;function PowerAssertRecorder(){cov_97srrczfm.f[1]++;cov_97srrczfm.s[2]++;this.captured=[];}cov_97srrczfm.s[3]++;PowerAssertRecorder.prototype._capt=function _capt(value,espath){cov_97srrczfm.f[2]++;cov_97srrczfm.s[4]++;this.captured.push({value:value,espath:espath});cov_97srrczfm.s[5]++;return value;};cov_97srrczfm.s[6]++;PowerAssertRecorder.prototype._expr=function _expr(value,source){cov_97srrczfm.f[3]++;var capturedValues=(cov_97srrczfm.s[7]++,this.captured);cov_97srrczfm.s[8]++;this.captured=[];cov_97srrczfm.s[9]++;return{powerAssertContext:{value:value,events:capturedValues},source:source};};cov_97srrczfm.s[10]++;return PowerAssertRecorder;}());const test=(cov_97srrczfm.s[11]++,require('ava'));const sinon=(cov_97srrczfm.s[12]++,require('sinon'));const proxyquire=(cov_97srrczfm.s[13]++,require('proxyquire'));const Sequelize=(cov_97srrczfm.s[14]++,require('sequelize'));const Op=(cov_97srrczfm.s[15]++,Sequelize.Op);const userFixtures=(cov_97srrczfm.s[16]++,require('./fixtures/user'));const appointmentFixtures=(cov_97srrczfm.s[17]++,require('./fixtures/appointment'));let config=(cov_97srrczfm.s[18]++,{logging(){}});let userid=(cov_97srrczfm.s[19]++,2);let appointmentid=(cov_97srrczfm.s[20]++,5);let ccid=(cov_97srrczfm.s[21]++,11);let UserStub=(cov_97srrczfm.s[22]++,null);let AppointmentStub=(cov_97srrczfm.s[23]++,null);let db=(cov_97srrczfm.s[24]++,null);let sandbox=(cov_97srrczfm.s[25]++,null);let customer=(cov_97srrczfm.s[26]++,Object.assign({},appointmentFixtures.user));let doctor=(cov_97srrczfm.s[27]++,Object.assign({},appointmentFixtures.docuser));let oneapp=(cov_97srrczfm.s[28]++,Object.assign({},appointmentFixtures.oneapp));let vArgs=(cov_97srrczfm.s[29]++,{where:{id:appointmentid,userId:userid}});let ccidArgs=(cov_97srrczfm.s[30]++,{where:{ccid}});let newAppointment=(cov_97srrczfm.s[31]++,{id:appointmentid,userId:userid,day:'2018-06-28',hourinit:'8:00',hourend:'9:00',doctorname:'Pepito Pérez',type:'General',branch:1,state:1,assignedid:0,assignedname:'',createdAt:new Date(),updatedAt:new Date()// operatorsAliases: false
});let dayinit=(cov_97srrczfm.s[32]++,'2018-06-20');let dayend=(cov_97srrczfm.s[33]++,'2018-06-24');// UserStub = {
//  hasMany: sinon.spy()
// }
let daysArgs=(cov_97srrczfm.s[34]++,{where:{day:{[Op.lt]:dayinit,[Op.gt]:dayend},state:1}});cov_97srrczfm.s[35]++;test.beforeEach(async()=>{cov_97srrczfm.f[4]++;cov_97srrczfm.s[36]++;sandbox=sinon.createSandbox();cov_97srrczfm.s[37]++;UserStub={hasMany:sandbox.spy()};cov_97srrczfm.s[38]++;AppointmentStub={belongsTo:sandbox.spy()// Model create and update Stub
};cov_97srrczfm.s[39]++;AppointmentStub.create=sandbox.stub();cov_97srrczfm.s[40]++;AppointmentStub.create.withArgs(newAppointment).returns(Promise.resolve({toJSON(){cov_97srrczfm.s[41]++;return newAppointment;}}));// Model findOne Stub (with ccid)
cov_97srrczfm.s[42]++;AppointmentStub.findOne=sandbox.stub();cov_97srrczfm.s[43]++;AppointmentStub.findOne.withArgs(vArgs).returns(Promise.resolve(appointmentFixtures.byrel(appointmentid,userid)));// Model findOne Stub (with ccid)
cov_97srrczfm.s[44]++;UserStub.findOne=sandbox.stub();cov_97srrczfm.s[45]++;UserStub.findOne.withArgs(ccidArgs).returns(Promise.resolve(userFixtures.byCCid(ccid)));cov_97srrczfm.s[46]++;AppointmentStub.findAll=sandbox.stub();cov_97srrczfm.s[47]++;AppointmentStub.findAll.withArgs(daysArgs).returns(Promise.resolve(appointmentFixtures.bydays(dayinit,dayend)));// Model findById Stub
// UserStub.findById = sandbox.stub()
// UserStub.findById.withArgs(id).returns(Promise.resolve(userFixtures.byId(id))) */
const setupDatabase=(cov_97srrczfm.s[48]++,proxyquire('../',{'./models/user':()=>{cov_97srrczfm.f[5]++;cov_97srrczfm.s[49]++;return UserStub;},'./models/appointment':()=>{cov_97srrczfm.f[6]++;cov_97srrczfm.s[50]++;return AppointmentStub;}}));cov_97srrczfm.s[51]++;db=await setupDatabase(config);});cov_97srrczfm.s[52]++;test.afterEach(()=>{cov_97srrczfm.f[7]++;cov_97srrczfm.s[53]++;(cov_97srrczfm.b[0][0]++,sandbox)&&(cov_97srrczfm.b[0][1]++,sandbox.restore());});cov_97srrczfm.s[54]++;test('Appointment',t=>{cov_97srrczfm.f[8]++;var _rec=(cov_97srrczfm.s[55]++,new _powerAssertRecorder());cov_97srrczfm.s[56]++;t.truthy(_rec._expr(_rec._capt(_rec._capt(db,'arguments/0/object').Appointment,'arguments/0'),{content:'t.truthy(db.Appointment, \'Appointment service should exist\')',filepath:'tests/appointment-tests.js',line:115,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"truthy","range":[2,8]},"computed":false,"range":[0,8]},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"db","range":[9,11]},"property":{"type":"Identifier","name":"Appointment","range":[12,23]},"computed":false,"range":[9,23]},{"type":"StringLiteral","value":"Appointment service should exist","range":[25,59]}],"range":[0,60]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"truthy","range":[2,8]},{"type":{"label":"("},"range":[8,9]},{"type":{"label":"name"},"value":"db","range":[9,11]},{"type":{"label":"."},"range":[11,12]},{"type":{"label":"name"},"value":"Appointment","range":[12,23]},{"type":{"label":","},"range":[23,24]},{"type":{"label":"string"},"value":"Appointment service should exist","range":[25,59]},{"type":{"label":")"},"range":[59,60]}]',visitorKeys:_powerAssertVisitorKeys}),'Appointment service should exist');});cov_97srrczfm.s[57]++;test('User',t=>{cov_97srrczfm.f[9]++;var _rec2=(cov_97srrczfm.s[58]++,new _powerAssertRecorder());cov_97srrczfm.s[59]++;t.truthy(_rec2._expr(_rec2._capt(_rec2._capt(db,'arguments/0/object').User,'arguments/0'),{content:'t.truthy(db.User, \'User service should exist\')',filepath:'tests/appointment-tests.js',line:119,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"truthy","range":[2,8]},"computed":false,"range":[0,8]},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"db","range":[9,11]},"property":{"type":"Identifier","name":"User","range":[12,16]},"computed":false,"range":[9,16]},{"type":"StringLiteral","value":"User service should exist","range":[18,45]}],"range":[0,46]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"truthy","range":[2,8]},{"type":{"label":"("},"range":[8,9]},{"type":{"label":"name"},"value":"db","range":[9,11]},{"type":{"label":"."},"range":[11,12]},{"type":{"label":"name"},"value":"User","range":[12,16]},{"type":{"label":","},"range":[16,17]},{"type":{"label":"string"},"value":"User service should exist","range":[18,45]},{"type":{"label":")"},"range":[45,46]}]',visitorKeys:_powerAssertVisitorKeys}),'User service should exist');});cov_97srrczfm.s[60]++;test.serial('Setup',t=>{cov_97srrczfm.f[10]++;var _rec3=(cov_97srrczfm.s[61]++,new _powerAssertRecorder()),_rec4=(cov_97srrczfm.s[62]++,new _powerAssertRecorder()),_rec5=(cov_97srrczfm.s[63]++,new _powerAssertRecorder()),_rec6=(cov_97srrczfm.s[64]++,new _powerAssertRecorder());cov_97srrczfm.s[65]++;t.true(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(UserStub,'arguments/0/object/object').hasMany,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.hasMany.called, \'UserModel.hasMany was executed\')',filepath:'tests/appointment-tests.js',line:123,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"hasMany","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"called","range":[24,30]},"computed":false,"range":[7,30]},{"type":"StringLiteral","value":"UserModel.hasMany was executed","range":[32,64]}],"range":[0,65]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"hasMany","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"called","range":[24,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"UserModel.hasMany was executed","range":[32,64]},{"type":{"label":")"},"range":[64,65]}]',visitorKeys:_powerAssertVisitorKeys}),'UserModel.hasMany was executed');cov_97srrczfm.s[66]++;t.true(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(UserStub,'arguments/0/callee/object/object').hasMany,'arguments/0/callee/object').calledWith(_rec4._capt(AppointmentStub,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(UserStub.hasMany.calledWith(AppointmentStub), \'Argument should be the AppointmentModel\')',filepath:'tests/appointment-tests.js',line:124,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"hasMany","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledWith","range":[24,34]},"computed":false,"range":[7,34]},"arguments":[{"type":"Identifier","name":"AppointmentStub","range":[35,50]}],"range":[7,51]},{"type":"StringLiteral","value":"Argument should be the AppointmentModel","range":[53,94]}],"range":[0,95]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"hasMany","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledWith","range":[24,34]},{"type":{"label":"("},"range":[34,35]},{"type":{"label":"name"},"value":"AppointmentStub","range":[35,50]},{"type":{"label":")"},"range":[50,51]},{"type":{"label":","},"range":[51,52]},{"type":{"label":"string"},"value":"Argument should be the AppointmentModel","range":[53,94]},{"type":{"label":")"},"range":[94,95]}]',visitorKeys:_powerAssertVisitorKeys}),'Argument should be the AppointmentModel');cov_97srrczfm.s[67]++;t.true(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(AppointmentStub,'arguments/0/object/object').belongsTo,'arguments/0/object').called,'arguments/0'),{content:'t.true(AppointmentStub.belongsTo.called, \'AppointmentModel.belongsTo was executed\')',filepath:'tests/appointment-tests.js',line:125,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AppointmentStub","range":[7,22]},"property":{"type":"Identifier","name":"belongsTo","range":[23,32]},"computed":false,"range":[7,32]},"property":{"type":"Identifier","name":"called","range":[33,39]},"computed":false,"range":[7,39]},{"type":"StringLiteral","value":"AppointmentModel.belongsTo was executed","range":[41,82]}],"range":[0,83]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AppointmentStub","range":[7,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"belongsTo","range":[23,32]},{"type":{"label":"."},"range":[32,33]},{"type":{"label":"name"},"value":"called","range":[33,39]},{"type":{"label":","},"range":[39,40]},{"type":{"label":"string"},"value":"AppointmentModel.belongsTo was executed","range":[41,82]},{"type":{"label":")"},"range":[82,83]}]',visitorKeys:_powerAssertVisitorKeys}),'AppointmentModel.belongsTo was executed');cov_97srrczfm.s[68]++;t.true(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(AppointmentStub,'arguments/0/callee/object/object').belongsTo,'arguments/0/callee/object').calledWith(_rec6._capt(UserStub,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(AppointmentStub.belongsTo.calledWith(UserStub), \'Argument should be the UserModel\')',filepath:'tests/appointment-tests.js',line:126,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AppointmentStub","range":[7,22]},"property":{"type":"Identifier","name":"belongsTo","range":[23,32]},"computed":false,"range":[7,32]},"property":{"type":"Identifier","name":"calledWith","range":[33,43]},"computed":false,"range":[7,43]},"arguments":[{"type":"Identifier","name":"UserStub","range":[44,52]}],"range":[7,53]},{"type":"StringLiteral","value":"Argument should be the UserModel","range":[55,89]}],"range":[0,90]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AppointmentStub","range":[7,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"belongsTo","range":[23,32]},{"type":{"label":"."},"range":[32,33]},{"type":{"label":"name"},"value":"calledWith","range":[33,43]},{"type":{"label":"("},"range":[43,44]},{"type":{"label":"name"},"value":"UserStub","range":[44,52]},{"type":{"label":")"},"range":[52,53]},{"type":{"label":","},"range":[53,54]},{"type":{"label":"string"},"value":"Argument should be the UserModel","range":[55,89]},{"type":{"label":")"},"range":[89,90]}]',visitorKeys:_powerAssertVisitorKeys}),'Argument should be the UserModel');});cov_97srrczfm.s[69]++;test.serial('Appointmet#createOrUpdate - new - user - doctor',async t=>{cov_97srrczfm.f[11]++;var _rec7=(cov_97srrczfm.s[70]++,new _powerAssertRecorder()),_rec8=(cov_97srrczfm.s[71]++,new _powerAssertRecorder()),_rec9=(cov_97srrczfm.s[72]++,new _powerAssertRecorder()),_rec10=(cov_97srrczfm.s[73]++,new _powerAssertRecorder()),_rec11=(cov_97srrczfm.s[74]++,new _powerAssertRecorder()),_rec12=(cov_97srrczfm.s[75]++,new _powerAssertRecorder()),_rec13=(cov_97srrczfm.s[76]++,new _powerAssertRecorder()),_rec14=(cov_97srrczfm.s[77]++,new _powerAssertRecorder()),_rec15=(cov_97srrczfm.s[78]++,new _powerAssertRecorder()),_rec16=(cov_97srrczfm.s[79]++,new _powerAssertRecorder());let appointment=(cov_97srrczfm.s[80]++,await db.Appointment.createOrUpdate(ccid,newAppointment));// Primero buscamos el usuario
cov_97srrczfm.s[81]++;t.true(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(UserStub,'arguments/0/object/object').findOne,'arguments/0/object').called,'arguments/0'),{content:'t.true(UserStub.findOne.called, \'findOne (user) should be called on model\')',filepath:'tests/appointment-tests.js',line:133,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"called","range":[24,30]},"computed":false,"range":[7,30]},{"type":"StringLiteral","value":"findOne (user) should be called on model","range":[32,74]}],"range":[0,75]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"called","range":[24,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"findOne (user) should be called on model","range":[32,74]},{"type":{"label":")"},"range":[74,75]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne (user) should be called on model');cov_97srrczfm.s[82]++;t.true(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(UserStub,'arguments/0/object/object').findOne,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(UserStub.findOne.calledOnce, \'findOne (user) should be called twice\')',filepath:'tests/appointment-tests.js',line:134,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledOnce","range":[24,34]},"computed":false,"range":[7,34]},{"type":"StringLiteral","value":"findOne (user) should be called twice","range":[36,75]}],"range":[0,76]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledOnce","range":[24,34]},{"type":{"label":","},"range":[34,35]},{"type":{"label":"string"},"value":"findOne (user) should be called twice","range":[36,75]},{"type":{"label":")"},"range":[75,76]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne (user) should be called twice');cov_97srrczfm.s[83]++;t.true(_rec9._expr(_rec9._capt(_rec9._capt(_rec9._capt(UserStub,'arguments/0/callee/object/object').findOne,'arguments/0/callee/object').calledWith(_rec9._capt(ccidArgs,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(UserStub.findOne.calledWith(ccidArgs), \'findOne (user) should be called with ccid args\')',filepath:'tests/appointment-tests.js',line:135,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledWith","range":[24,34]},"computed":false,"range":[7,34]},"arguments":[{"type":"Identifier","name":"ccidArgs","range":[35,43]}],"range":[7,44]},{"type":"StringLiteral","value":"findOne (user) should be called with ccid args","range":[46,94]}],"range":[0,95]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledWith","range":[24,34]},{"type":{"label":"("},"range":[34,35]},{"type":{"label":"name"},"value":"ccidArgs","range":[35,43]},{"type":{"label":")"},"range":[43,44]},{"type":{"label":","},"range":[44,45]},{"type":{"label":"string"},"value":"findOne (user) should be called with ccid args","range":[46,94]},{"type":{"label":")"},"range":[94,95]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne (user) should be called with ccid args');// Luego buscamos la cita
cov_97srrczfm.s[84]++;t.true(_rec10._expr(_rec10._capt(_rec10._capt(_rec10._capt(AppointmentStub,'arguments/0/object/object').findOne,'arguments/0/object').called,'arguments/0'),{content:'t.true(AppointmentStub.findOne.called, \'findOne (appoint) should be called on model\')',filepath:'tests/appointment-tests.js',line:138,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AppointmentStub","range":[7,22]},"property":{"type":"Identifier","name":"findOne","range":[23,30]},"computed":false,"range":[7,30]},"property":{"type":"Identifier","name":"called","range":[31,37]},"computed":false,"range":[7,37]},{"type":"StringLiteral","value":"findOne (appoint) should be called on model","range":[39,84]}],"range":[0,85]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AppointmentStub","range":[7,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"findOne","range":[23,30]},{"type":{"label":"."},"range":[30,31]},{"type":{"label":"name"},"value":"called","range":[31,37]},{"type":{"label":","},"range":[37,38]},{"type":{"label":"string"},"value":"findOne (appoint) should be called on model","range":[39,84]},{"type":{"label":")"},"range":[84,85]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne (appoint) should be called on model');cov_97srrczfm.s[85]++;t.true(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(AppointmentStub,'arguments/0/object/object').findOne,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(AppointmentStub.findOne.calledOnce, \'findOne (appoint) should be called twice\')',filepath:'tests/appointment-tests.js',line:139,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AppointmentStub","range":[7,22]},"property":{"type":"Identifier","name":"findOne","range":[23,30]},"computed":false,"range":[7,30]},"property":{"type":"Identifier","name":"calledOnce","range":[31,41]},"computed":false,"range":[7,41]},{"type":"StringLiteral","value":"findOne (appoint) should be called twice","range":[43,85]}],"range":[0,86]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AppointmentStub","range":[7,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"findOne","range":[23,30]},{"type":{"label":"."},"range":[30,31]},{"type":{"label":"name"},"value":"calledOnce","range":[31,41]},{"type":{"label":","},"range":[41,42]},{"type":{"label":"string"},"value":"findOne (appoint) should be called twice","range":[43,85]},{"type":{"label":")"},"range":[85,86]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne (appoint) should be called twice');cov_97srrczfm.s[86]++;t.true(_rec12._expr(_rec12._capt(_rec12._capt(_rec12._capt(AppointmentStub,'arguments/0/callee/object/object').findOne,'arguments/0/callee/object').calledWith(_rec12._capt(vArgs,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(AppointmentStub.findOne.calledWith(vArgs), \'findOne (appoint) should be called with vargs\')',filepath:'tests/appointment-tests.js',line:140,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AppointmentStub","range":[7,22]},"property":{"type":"Identifier","name":"findOne","range":[23,30]},"computed":false,"range":[7,30]},"property":{"type":"Identifier","name":"calledWith","range":[31,41]},"computed":false,"range":[7,41]},"arguments":[{"type":"Identifier","name":"vArgs","range":[42,47]}],"range":[7,48]},{"type":"StringLiteral","value":"findOne (appoint) should be called with vargs","range":[50,97]}],"range":[0,98]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AppointmentStub","range":[7,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"findOne","range":[23,30]},{"type":{"label":"."},"range":[30,31]},{"type":{"label":"name"},"value":"calledWith","range":[31,41]},{"type":{"label":"("},"range":[41,42]},{"type":{"label":"name"},"value":"vArgs","range":[42,47]},{"type":{"label":")"},"range":[47,48]},{"type":{"label":","},"range":[48,49]},{"type":{"label":"string"},"value":"findOne (appoint) should be called with vargs","range":[50,97]},{"type":{"label":")"},"range":[97,98]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne (appoint) should be called with vargs');//Ahora comprobemos la condición de creación
cov_97srrczfm.s[87]++;t.true(_rec13._expr(_rec13._capt(_rec13._capt(_rec13._capt(_rec13._capt(_rec13._capt(UserStub,'arguments/0/left/object/callee/object/object').findOne,'arguments/0/left/object/callee/object').calledWith(_rec13._capt(ccidArgs,'arguments/0/left/object/arguments/0')),'arguments/0/left/object').type,'arguments/0/left')==='doctor','arguments/0'),{content:'t.true(UserStub.findOne.calledWith(ccidArgs).type === \'doctor\')',filepath:'tests/appointment-tests.js',line:143,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"===","left":{"type":"MemberExpression","object":{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"UserStub","range":[7,15]},"property":{"type":"Identifier","name":"findOne","range":[16,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledWith","range":[24,34]},"computed":false,"range":[7,34]},"arguments":[{"type":"Identifier","name":"ccidArgs","range":[35,43]}],"range":[7,44]},"property":{"type":"Identifier","name":"type","range":[45,49]},"computed":false,"range":[7,49]},"right":{"type":"StringLiteral","value":"doctor","range":[54,62]},"range":[7,62]}],"range":[0,63]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"UserStub","range":[7,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"findOne","range":[16,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledWith","range":[24,34]},{"type":{"label":"("},"range":[34,35]},{"type":{"label":"name"},"value":"ccidArgs","range":[35,43]},{"type":{"label":")"},"range":[43,44]},{"type":{"label":"."},"range":[44,45]},{"type":{"label":"name"},"value":"type","range":[45,49]},{"type":{"label":"==/!="},"value":"===","range":[50,53]},{"type":{"label":"string"},"value":"doctor","range":[54,62]},{"type":{"label":")"},"range":[62,63]}]',visitorKeys:_powerAssertVisitorKeys}));// Luego creamos la cita
cov_97srrczfm.s[88]++;t.true(_rec14._expr(_rec14._capt(_rec14._capt(_rec14._capt(AppointmentStub,'arguments/0/object/object').create,'arguments/0/object').called,'arguments/0'),{content:'t.true(AppointmentStub.create.called, \'appointment.create called on model\')',filepath:'tests/appointment-tests.js',line:146,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AppointmentStub","range":[7,22]},"property":{"type":"Identifier","name":"create","range":[23,29]},"computed":false,"range":[7,29]},"property":{"type":"Identifier","name":"called","range":[30,36]},"computed":false,"range":[7,36]},{"type":"StringLiteral","value":"appointment.create called on model","range":[38,74]}],"range":[0,75]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AppointmentStub","range":[7,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"create","range":[23,29]},{"type":{"label":"."},"range":[29,30]},{"type":{"label":"name"},"value":"called","range":[30,36]},{"type":{"label":","},"range":[36,37]},{"type":{"label":"string"},"value":"appointment.create called on model","range":[38,74]},{"type":{"label":")"},"range":[74,75]}]',visitorKeys:_powerAssertVisitorKeys}),'appointment.create called on model');cov_97srrczfm.s[89]++;t.true(_rec15._expr(_rec15._capt(_rec15._capt(_rec15._capt(AppointmentStub,'arguments/0/object/object').create,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(AppointmentStub.create.calledOnce, \'appointment.create should be called once\')',filepath:'tests/appointment-tests.js',line:147,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AppointmentStub","range":[7,22]},"property":{"type":"Identifier","name":"create","range":[23,29]},"computed":false,"range":[7,29]},"property":{"type":"Identifier","name":"calledOnce","range":[30,40]},"computed":false,"range":[7,40]},{"type":"StringLiteral","value":"appointment.create should be called once","range":[42,84]}],"range":[0,85]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AppointmentStub","range":[7,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"create","range":[23,29]},{"type":{"label":"."},"range":[29,30]},{"type":{"label":"name"},"value":"calledOnce","range":[30,40]},{"type":{"label":","},"range":[40,41]},{"type":{"label":"string"},"value":"appointment.create should be called once","range":[42,84]},{"type":{"label":")"},"range":[84,85]}]',visitorKeys:_powerAssertVisitorKeys}),'appointment.create should be called once');cov_97srrczfm.s[90]++;t.true(_rec16._expr(_rec16._capt(_rec16._capt(_rec16._capt(AppointmentStub,'arguments/0/callee/object/object').create,'arguments/0/callee/object').calledWith(_rec16._capt(newAppointment,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(AppointmentStub.create.calledWith(newAppointment), \'appointment.create should be called with specified args\')',filepath:'tests/appointment-tests.js',line:148,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AppointmentStub","range":[7,22]},"property":{"type":"Identifier","name":"create","range":[23,29]},"computed":false,"range":[7,29]},"property":{"type":"Identifier","name":"calledWith","range":[30,40]},"computed":false,"range":[7,40]},"arguments":[{"type":"Identifier","name":"newAppointment","range":[41,55]}],"range":[7,56]},{"type":"StringLiteral","value":"appointment.create should be called with specified args","range":[58,115]}],"range":[0,116]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AppointmentStub","range":[7,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"create","range":[23,29]},{"type":{"label":"."},"range":[29,30]},{"type":{"label":"name"},"value":"calledWith","range":[30,40]},{"type":{"label":"("},"range":[40,41]},{"type":{"label":"name"},"value":"newAppointment","range":[41,55]},{"type":{"label":")"},"range":[55,56]},{"type":{"label":","},"range":[56,57]},{"type":{"label":"string"},"value":"appointment.create should be called with specified args","range":[58,115]},{"type":{"label":")"},"range":[115,116]}]',visitorKeys:_powerAssertVisitorKeys}),'appointment.create should be called with specified args');cov_97srrczfm.s[91]++;t.deepEqual(appointment,newAppointment,'appointment should be the same');});/* test.serial('Appointment#findNoAssignedByDate', async t => {
  let appointments = await db.Appointment.findNoAssignedByDate(dayinit, dayend)

  // Buscamos con un alll
  t.true(AppointmentStub.findAll.called, 'findOne should be called on model')
  t.true(AppointmentStub.findAll.calledOnce, 'findOne should be called twice')
  t.true(AppointmentStub.findAll.calledWith(daysArgs), 'findOne should be called with ccid args')

  t.is(appointments.length, appointmentFixtures.bydays(dayinit,dayend).length, 'agents should be the same amount')
  t.deepEqual(appointments, appointmentFixtures.bydays(dayinit,dayend), 'agents should be the same')
}) */ /* test.serial('User#createOrUpdate - exists', async t => {
  let user = await db.User.createOrUpdate(single)

  t.true(UserStub.findOne.called, 'findOne should be called on model')
  t.true(UserStub.findOne.calledTwice, 'findOne should be called twice')
  // 2 Para el ccid
  t.true(UserStub.findOne.calledWith(ccidArgs), 'findOne should be called with ccid args')

  t.true(UserStub.update.called, 'agent.update called on model')
  t.true(UserStub.update.calledOnce, 'agent.update should be called once')
  t.true(UserStub.update.calledWith(single), 'agent.update should be called with specified args')
  t.deepEqual(user, single, 'agent should be the same')
}) */ //# sourceMappingURL=/home/shersnape/Ceiba/Java-Script/Tutorial/JavaScritp-Platzi/smallJS/smallJS-dbsql/node_modules/.cache/ava/e7cf4438520caa04a7e62dcab9ed1e80.js.map