'use strict';var cov_e1mmhbbz3=function(){var path="/home/shersnape/Ceiba/Java-Script/Tutorial/JavaScritp-Platzi/smallJS/smallJS-dbsql/lib/appointment.js",hash="ba83b2063a735efdff8072884792275ac5c4c328",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/shersnape/Ceiba/Java-Script/Tutorial/JavaScritp-Platzi/smallJS/smallJS-dbsql/lib/appointment.js",statementMap:{"0":{start:{line:3,column:18},end:{line:3,column:38}},"1":{start:{line:4,column:11},end:{line:4,column:23}},"2":{start:{line:5,column:0},end:{line:210,column:3}},"3":{start:{line:9,column:19},end:{line:11,column:8}},"4":{start:{line:30,column:8},end:{line:34,column:7}},"5":{start:{line:31,column:8},end:{line:31,column:55}},"6":{start:{line:32,column:23},end:{line:32,column:65}},"7":{start:{line:33,column:8},end:{line:33,column:30}},"8":{start:{line:40,column:6},end:{line:48,column:8}},"9":{start:{line:53,column:18},end:{line:61,column:7}},"10":{start:{line:63,column:6},end:{line:80,column:7}},"11":{start:{line:65,column:10},end:{line:65,column:29}},"12":{start:{line:66,column:10},end:{line:66,column:34}},"13":{start:{line:67,column:10},end:{line:67,column:15}},"14":{start:{line:69,column:10},end:{line:69,column:35}},"15":{start:{line:70,column:10},end:{line:70,column:40}},"16":{start:{line:71,column:10},end:{line:71,column:15}},"17":{start:{line:73,column:10},end:{line:73,column:31}},"18":{start:{line:74,column:10},end:{line:74,column:36}},"19":{start:{line:75,column:10},end:{line:75,column:15}},"20":{start:{line:77,column:10},end:{line:77,column:32}},"21":{start:{line:78,column:10},end:{line:78,column:22}},"22":{start:{line:79,column:10},end:{line:79,column:15}},"23":{start:{line:81,column:6},end:{line:81,column:44}},"24":{start:{line:86,column:18},end:{line:93,column:7}},"25":{start:{line:94,column:6},end:{line:112,column:7}},"26":{start:{line:96,column:10},end:{line:96,column:29}},"27":{start:{line:97,column:10},end:{line:97,column:34}},"28":{start:{line:98,column:10},end:{line:98,column:15}},"29":{start:{line:101,column:10},end:{line:101,column:35}},"30":{start:{line:102,column:10},end:{line:102,column:40}},"31":{start:{line:103,column:10},end:{line:103,column:15}},"32":{start:{line:105,column:10},end:{line:105,column:31}},"33":{start:{line:106,column:10},end:{line:106,column:36}},"34":{start:{line:107,column:10},end:{line:107,column:15}},"35":{start:{line:109,column:10},end:{line:109,column:32}},"36":{start:{line:110,column:10},end:{line:110,column:22}},"37":{start:{line:111,column:10},end:{line:111,column:15}},"38":{start:{line:113,column:6},end:{line:113,column:44}},"39":{start:{line:117,column:23},end:{line:122,column:7}},"40":{start:{line:124,column:21},end:{line:124,column:54}},"41":{start:{line:126,column:36},end:{line:126,column:83}},"42":{start:{line:129,column:6},end:{line:132,column:7}},"43":{start:{line:130,column:24},end:{line:130,column:120}},"44":{start:{line:131,column:8},end:{line:131,column:88}},"45":{start:{line:137,column:23},end:{line:147,column:7}},"46":{start:{line:149,column:21},end:{line:149,column:54}},"47":{start:{line:151,column:36},end:{line:151,column:83}},"48":{start:{line:154,column:6},end:{line:161,column:7}},"49":{start:{line:155,column:8},end:{line:160,column:9}},"50":{start:{line:156,column:26},end:{line:158,column:12}},"51":{start:{line:159,column:10},end:{line:159,column:89}},"52":{start:{line:169,column:6},end:{line:169,column:42}},"53":{start:{line:174,column:19},end:{line:176,column:8}},"54":{start:{line:177,column:6},end:{line:181,column:8}},"55":{start:{line:185,column:19},end:{line:187,column:8}},"56":{start:{line:188,column:6},end:{line:196,column:8}},"57":{start:{line:199,column:4},end:{line:209,column:5}}},fnMap:{"0":{name:"setupAppointment",decl:{start:{line:5,column:26},end:{line:5,column:42}},loc:{start:{line:5,column:72},end:{line:210,column:3}},line:5},"1":{name:"createOrUpdate",decl:{start:{line:8,column:19},end:{line:8,column:33}},loc:{start:{line:8,column:53},end:{line:35,column:5}},line:8},"2":{name:"findNoAssignedByDate",decl:{start:{line:39,column:19},end:{line:39,column:39}},loc:{start:{line:39,column:57},end:{line:49,column:5}},line:39},"3":{name:"findNoAssignedByGroup",decl:{start:{line:52,column:19},end:{line:52,column:40}},loc:{start:{line:52,column:75},end:{line:82,column:5}},line:52},"4":{name:"findByDayGroup",decl:{start:{line:85,column:19},end:{line:85,column:33}},loc:{start:{line:85,column:68},end:{line:114,column:5}},line:85},"5":{name:"assignedAndUpdate",decl:{start:{line:116,column:19},end:{line:116,column:36}},loc:{start:{line:116,column:56},end:{line:134,column:5}},line:116},"6":{name:"canceledAndUpdate",decl:{start:{line:136,column:19},end:{line:136,column:36}},loc:{start:{line:136,column:56},end:{line:163,column:5}},line:136},"7":{name:"findById",decl:{start:{line:168,column:13},end:{line:168,column:21}},loc:{start:{line:168,column:26},end:{line:170,column:5}},line:168},"8":{name:"findByCCid",decl:{start:{line:173,column:19},end:{line:173,column:29}},loc:{start:{line:173,column:36},end:{line:182,column:5}},line:173},"9":{name:"findByCCidDate",decl:{start:{line:184,column:19},end:{line:184,column:33}},loc:{start:{line:184,column:57},end:{line:197,column:5}},line:184}},branchMap:{"0":{loc:{start:{line:30,column:8},end:{line:34,column:7}},type:"if",locations:[{start:{line:30,column:8},end:{line:34,column:7}},{start:{line:30,column:8},end:{line:34,column:7}}],line:30},"1":{loc:{start:{line:63,column:6},end:{line:80,column:7}},type:"switch",locations:[{start:{line:64,column:8},end:{line:67,column:15}},{start:{line:68,column:8},end:{line:71,column:15}},{start:{line:72,column:8},end:{line:75,column:15}},{start:{line:76,column:8},end:{line:79,column:15}}],line:63},"2":{loc:{start:{line:94,column:6},end:{line:112,column:7}},type:"switch",locations:[{start:{line:95,column:8},end:{line:98,column:15}},{start:{line:100,column:8},end:{line:103,column:15}},{start:{line:104,column:8},end:{line:107,column:15}},{start:{line:108,column:8},end:{line:111,column:15}}],line:94},"3":{loc:{start:{line:129,column:6},end:{line:132,column:7}},type:"if",locations:[{start:{line:129,column:6},end:{line:132,column:7}},{start:{line:129,column:6},end:{line:132,column:7}}],line:129},"4":{loc:{start:{line:129,column:10},end:{line:129,column:37}},type:"binary-expr",locations:[{start:{line:129,column:10},end:{line:129,column:14}},{start:{line:129,column:18},end:{line:129,column:37}}],line:129},"5":{loc:{start:{line:131,column:15},end:{line:131,column:88}},type:"cond-expr",locations:[{start:{line:131,column:25},end:{line:131,column:66}},{start:{line:131,column:69},end:{line:131,column:88}}],line:131},"6":{loc:{start:{line:154,column:6},end:{line:161,column:7}},type:"if",locations:[{start:{line:154,column:6},end:{line:161,column:7}},{start:{line:154,column:6},end:{line:161,column:7}}],line:154},"7":{loc:{start:{line:154,column:10},end:{line:154,column:44}},type:"binary-expr",locations:[{start:{line:154,column:10},end:{line:154,column:14}},{start:{line:154,column:18},end:{line:154,column:44}}],line:154},"8":{loc:{start:{line:155,column:8},end:{line:160,column:9}},type:"if",locations:[{start:{line:155,column:8},end:{line:160,column:9}},{start:{line:155,column:8},end:{line:160,column:9}}],line:155},"9":{loc:{start:{line:155,column:12},end:{line:155,column:101}},type:"binary-expr",locations:[{start:{line:155,column:12},end:{line:155,column:36}},{start:{line:155,column:40},end:{line:155,column:76}},{start:{line:155,column:80},end:{line:155,column:101}}],line:155},"10":{loc:{start:{line:159,column:17},end:{line:159,column:89}},type:"cond-expr",locations:[{start:{line:159,column:27},end:{line:159,column:67}},{start:{line:159,column:70},end:{line:159,column:89}}],line:159}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0],"1":[0,0,0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const Sequelize=(cov_e1mmhbbz3.s[0]++,require('sequelize'));const Op=(cov_e1mmhbbz3.s[1]++,Sequelize.Op);cov_e1mmhbbz3.s[2]++;module.exports=function setupAppointment(AppointmentModel,UserModel){cov_e1mmhbbz3.f[0]++;// Primero vamos a hacer un funcion asincrona para crear o actualizar los datos
// La vamos asignar a un usuario especÃ­fico.
async function createOrUpdate(ccid,appointment){cov_e1mmhbbz3.f[1]++;const user=(cov_e1mmhbbz3.s[3]++,await UserModel.findOne({where:{ccid}}));/*const existingAppointmentBelongtoUser   = await AppointmentModel.findOne({
        where: {
          id:appointment.id,
          userId:user.id
        }
      })*/ //const condCreatingAndUpdate = (appointment.assignedid === 0) && (appointment.assignedname === '')
//  && (appointment.state === 1) && (user.type === 'doctor')
// Si la cita ya existe, se actualiza
/*if (existingAppointmentBelongtoUser && condCreatingAndUpdate) {
        const updated = await AppointmentModel.update(appointment, {id:appointment.id})
        return updated ? AppointmentModel.findById(appointment.id) : existingAppointmentBelongtoUser
      }*/ // El usuario existe, es un doctor y ha diligencciado correctamente la cita
//if (condCreatingAndUpdate) {
cov_e1mmhbbz3.s[4]++;if(user){cov_e1mmhbbz3.b[0][0]++;cov_e1mmhbbz3.s[5]++;Object.assign(appointment,{userId:user.id});const result=(cov_e1mmhbbz3.s[6]++,await AppointmentModel.create(appointment));cov_e1mmhbbz3.s[7]++;return result.toJSON();}else{cov_e1mmhbbz3.b[0][1]++;}}// Fin de async function create
// Ahora vamos a agrupar por dÃ­a/dÃ­as las citas no asignadas ya creada por los doctores.
// Â¿DeberÃ­a usar async? Â¿Vamos a usar await?
async function findNoAssignedByDate(dayinit,dayend){cov_e1mmhbbz3.f[2]++;cov_e1mmhbbz3.s[8]++;return AppointmentModel.findAll({where:{day:{[Op.lt]:dayinit,[Op.gt]:dayend},state:1}});}// Fin de async function findNoAssignedByWeek
// O las citas por dÃ­as no asignadas con alguna condiciÃ³n mÃ¡s
async function findNoAssignedByGroup(property,value,dayinit,dayend){cov_e1mmhbbz3.f[3]++;let query=(cov_e1mmhbbz3.s[9]++,{where:{day:{[Op.lt]:dayinit,[Op.gt]:dayend},state:1}});cov_e1mmhbbz3.s[10]++;switch(property){case'type':cov_e1mmhbbz3.b[1][0]++;cov_e1mmhbbz3.s[11]++;console.log('Type');cov_e1mmhbbz3.s[12]++;query.where.type=value;cov_e1mmhbbz3.s[13]++;break;case'doctorname':cov_e1mmhbbz3.b[1][1]++;cov_e1mmhbbz3.s[14]++;console.log('doctorname');cov_e1mmhbbz3.s[15]++;query.where.doctorname=value;cov_e1mmhbbz3.s[16]++;break;case'branch':cov_e1mmhbbz3.b[1][2]++;cov_e1mmhbbz3.s[17]++;console.log('branch');cov_e1mmhbbz3.s[18]++;query.where.branch=value;cov_e1mmhbbz3.s[19]++;break;default:cov_e1mmhbbz3.b[1][3]++;cov_e1mmhbbz3.s[20]++;console.log('Default');cov_e1mmhbbz3.s[21]++;query=null;cov_e1mmhbbz3.s[22]++;break;}cov_e1mmhbbz3.s[23]++;return AppointmentModel.findAll(query);}// Fin de async function findNoAssignedByGroup
// O las citas por dÃ­a sin importar la asignaciÃ³n con alguna condiciÃ³n mÃ¡s
async function findByDayGroup(property,value,dayinit,dayend){cov_e1mmhbbz3.f[4]++;let query=(cov_e1mmhbbz3.s[24]++,{where:{day:{[Op.lt]:dayinit,[Op.gt]:dayend}}});cov_e1mmhbbz3.s[25]++;switch(property){case'type':cov_e1mmhbbz3.b[2][0]++;cov_e1mmhbbz3.s[26]++;console.log('Type');cov_e1mmhbbz3.s[27]++;query.where.type=value;cov_e1mmhbbz3.s[28]++;break;case'doctorname':cov_e1mmhbbz3.b[2][1]++;cov_e1mmhbbz3.s[29]++;console.log('doctorname');cov_e1mmhbbz3.s[30]++;query.where.doctorname=value;cov_e1mmhbbz3.s[31]++;break;case'branch':cov_e1mmhbbz3.b[2][2]++;cov_e1mmhbbz3.s[32]++;console.log('branch');cov_e1mmhbbz3.s[33]++;query.where.branch=value;cov_e1mmhbbz3.s[34]++;break;default:cov_e1mmhbbz3.b[2][3]++;cov_e1mmhbbz3.s[35]++;console.log('Default');cov_e1mmhbbz3.s[36]++;query=null;cov_e1mmhbbz3.s[37]++;break;}cov_e1mmhbbz3.s[38]++;return AppointmentModel.findAll(query);}async function assignedAndUpdate(ccid,appointment){cov_e1mmhbbz3.f[5]++;const condUser=(cov_e1mmhbbz3.s[39]++,{where:{ccid:ccid,type:'customer'}// Luego creamos una variable que nos devuelva si existe ese usuario como cliente
});const user=(cov_e1mmhbbz3.s[40]++,await UserModel.findAll(condUser));// Probar que existe la cita
const existingAppointment=(cov_e1mmhbbz3.s[41]++,await AppointmentModel.findById(appointment.id));// o por el id de la cita, para ese usamos findId
// Existe y es un cliente
cov_e1mmhbbz3.s[42]++;if((cov_e1mmhbbz3.b[4][0]++,user)&&(cov_e1mmhbbz3.b[4][1]++,existingAppointment)){cov_e1mmhbbz3.b[3][0]++;const updated=(cov_e1mmhbbz3.s[43]++,await AppointmentModel.update(appointment,{assignedid:ccid,assignedname:user.name,state:2}));cov_e1mmhbbz3.s[44]++;return updated?(cov_e1mmhbbz3.b[5][0]++,AppointmentModel.findById(appointment.id)):(cov_e1mmhbbz3.b[5][1]++,existingAppointment);}else{cov_e1mmhbbz3.b[3][1]++;}// AquÃ­ hay que poner algo por si no se actualiza.
}// Fin de async function create
async function canceledAndUpdate(ccid,appointment){cov_e1mmhbbz3.f[6]++;const condUser=(cov_e1mmhbbz3.s[45]++,{where:{ccid:ccid,type:{[Op.or]:{[Op.eq]:'customer',[Op.eq]:'admin'}}}// Luego creamos una variable que nos devuelva si existe ese usuario como cliente
});const user=(cov_e1mmhbbz3.s[46]++,await UserModel.findOne(condUser));// Probar que existe la cita
const existingAppointment=(cov_e1mmhbbz3.s[47]++,await AppointmentModel.findById(appointment.id));// o por el id de la cita, para ese usamos findId
// Existe y es un cliente
cov_e1mmhbbz3.s[48]++;if((cov_e1mmhbbz3.b[7][0]++,user)&&(cov_e1mmhbbz3.b[7][1]++,appointment.assigned===2)){cov_e1mmhbbz3.b[6][0]++;cov_e1mmhbbz3.s[49]++;if((cov_e1mmhbbz3.b[9][0]++,user.type==='customer')&&(cov_e1mmhbbz3.b[9][1]++,appointment.assignedid===user.ccid)||(cov_e1mmhbbz3.b[9][2]++,user.type==='admin')){cov_e1mmhbbz3.b[8][0]++;const updated=(cov_e1mmhbbz3.s[50]++,await AppointmentModel.update(appointment,{assignedid:'',assignedname:'',state:1}));cov_e1mmhbbz3.s[51]++;return updated?(cov_e1mmhbbz3.b[10][0]++,AppointmentModel.findOne(appointment.id)):(cov_e1mmhbbz3.b[10][1]++,existingAppointment);}else{cov_e1mmhbbz3.b[8][1]++;}}else{cov_e1mmhbbz3.b[6][1]++;}// AquÃ­ hay que poner algo por si no se actualiza.
}// Fin de async function create
/** **************** Funciones de bÃºsqueda normal ****************/ // Buscar por id (one)
function findById(id){cov_e1mmhbbz3.f[7]++;cov_e1mmhbbz3.s[52]++;return AppointmentModel.findById(id);}// Fin de function findById
// Buscar por ccidAssigned (one)
async function findByCCid(ccid){cov_e1mmhbbz3.f[8]++;const user=(cov_e1mmhbbz3.s[53]++,await AppointmentModel.findOne({where:{ccid}}));cov_e1mmhbbz3.s[54]++;return AppointmentModel.findAll({where:{userId:user.id}});}// Fin de funtion findByCCid
async function findByCCidDate(ccid,dayinit,dayend){cov_e1mmhbbz3.f[9]++;const user=(cov_e1mmhbbz3.s[55]++,await UserModel.findOne({where:{ccid}}));cov_e1mmhbbz3.s[56]++;return AppointmentModel.findAll({where:{userId:user.id,day:{[Op.lt]:dayinit,[Op.gt]:dayend}}});}// Fin de funtion findByCCid
cov_e1mmhbbz3.s[57]++;return{createOrUpdate,findNoAssignedByDate,findByCCidDate,findNoAssignedByGroup,findByDayGroup,findByCCid,findById,assignedAndUpdate,canceledAndUpdate};};